<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spss</name>
    </assembly>
    <members>
        <member name="T:Spss.Project">
            <summary>
            Summary description for Project.
            </summary>
        </member>
        <member name="T:Spss.SpssCase">
            <summary>
            Represents a single case in an SPSS data file.
            Allows for reading/writing variable data on a per-case basis.
            </summary>
            <remarks>
            In SPSS a case is analogous to a <see cref="T:System.Data.DataRow"/> 
            in ADO.NET.
            </remarks>
        </member>
        <member name="M:Spss.SpssCase.#ctor(Spss.SpssCasesCollection,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssCase"/> class.
            </summary>
        </member>
        <member name="M:Spss.SpssCase.Commit">
            <summary>
            Writes a newly added row to the data file.
            </summary>
            <remarks>
            This method should be called after a new row has had all its values set.
            After calling this method, variable values may not be changed.
            Without calling this method, the row is never actually written to the 
            data file.
            </remarks>
            <example>
            To add a case to an existing SPSS file called mydata.sav, the following code could apply:
            <code>
            using( SpssDataDocument doc = SpssDataDocument.Open("mydata.sav", SpssFileAccess.Append) )
            {
            	SpssCase Case = doc.Cases.New();
            	Case["var1"] = 5;
            	Case["var2"] = 3;
            	Case["name"] = "Andrew";
            	Case.Commit();
            }
            </code>
            </example>
        </member>
        <member name="M:Spss.SpssCase.ClearData">
            <summary>
            Clears every variable of data for this row.
            </summary>
            <remarks>
            Remarkably, this operation is necessary for every new row, in order to 
            prevent garbage from being placed into SPSS for the values that are never
            explicitly set otherwise.
            </remarks>
        </member>
        <member name="M:Spss.SpssCase.EnsureActiveCase">
            <summary>
            Ensures that the SPSS data file is currently pointing at this case's data.
            </summary>
        </member>
        <member name="P:Spss.SpssCase.Position">
            <summary>
            The index of the row within the data file.
            </summary>
        </member>
        <member name="P:Spss.SpssCase.Cases">
            <summary>
            Gets the containing <see cref="T:Spss.SpssCasesCollection"/>.
            </summary>
        </member>
        <member name="P:Spss.SpssCase.Variables">
            <summary>
            Gets the variables in the document.
            </summary>
        </member>
        <member name="P:Spss.SpssCase.Item(System.String)">
            <summary>
            Gets or sets the value of some variable on this row.
            </summary>
        </member>
        <member name="P:Spss.SpssCase.Item(System.Int32)">
            <summary>
            Gets or sets the value of some variable on this row.
            </summary>
        </member>
        <member name="T:Spss.SpssCasesCollection">
            <summary>
            Manages the cases in an SPSS data file.  
            Supports reading, writing, and appending data.
            </summary>
        </member>
        <member name="M:Spss.SpssCasesCollection.#ctor(Spss.SpssDataDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssCasesCollection"/> class.
            </summary>
            <param name="document">The hosting document.</param>
        </member>
        <member name="M:Spss.SpssCasesCollection.New">
            <summary>
            Creates a new SPSS case to assign values to.
            </summary>
            <returns>
            The <see cref="T:Spss.SpssCase"/> object used to access the new row.
            </returns>
            <remarks>
            This call must be followed (eventually) with a call to
            <see cref="M:Spss.SpssCase.Commit"/> or no new row will actually be added.
            </remarks>
            <example>
            To add a case to an existing SPSS file called mydata.sav, the following code could apply:
            <code>
            using( SpssDataDocument doc = SpssDataDocument.Open("mydata.sav", SpssFileAccess.Append) )
            {
            	SpssCase Case = doc.Cases.New();
            	Case["var1"] = 5;
            	Case["var2"] = 3;
            	Case["name"] = "Andrew";
            	Case.Commit();
            }
            </code>
            </example>
        </member>
        <member name="M:Spss.SpssCasesCollection.ToDataTable">
            <summary>
            Creates a <see cref="T:System.Data.DataTable"/> filled with all the data in the SPSS document.
            </summary>
            <returns>
            The created DataTable.
            </returns>
        </member>
        <member name="M:Spss.SpssCasesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator that will iterate over all cases in the data file.
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the set of cases is read only.  
            If no cases can be added, changed or removed, IsReadOnly is true.
            <seealso cref="P:Spss.SpssCasesCollection.IsAppendOnly"/>
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.IsAppendOnly">
            <summary>
            Gets a value indicating whether the set of cases can only be appended to.
            If no cases can be removed or changed, IsAppendOnly is true.
            <seealso cref="P:Spss.SpssCasesCollection.IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.Document">
            <summary>
            Gets the SPSS data document whose cases are being managed.
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.FileHandle">
            <summary>
            Gets the file handle of the SPSS data document whose cases are being managed.
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.Count">
            <summary>
            The number of cases in the document.
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.Position">
            <summary>
            Gets or sets the case that SPSS is pointing at to get/set variable data on.
            </summary>
        </member>
        <member name="P:Spss.SpssCasesCollection.Item(System.Int32)">
            <summary>
            Gets the case record at a specific 0-based index.
            </summary>
        </member>
        <member name="M:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator.#ctor(Spss.SpssCasesCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator"/> class.
            </summary>
            <param name="cases">The cases.</param>
        </member>
        <member name="M:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection or after the last element.
            </exception>
        </member>
        <member name="P:Spss.SpssCasesCollection.SpssCasesCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection or after the last element.
            </exception>
        </member>
        <member name="T:Spss.SpssConvert">
            <summary>
            Used to convert a DataTable into a persisted SPSS.SAV file. 
            </summary>
        </member>
        <member name="M:Spss.SpssConvert.#ctor(System.EventHandler)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssConvert"/> class.
            </summary>
            <param name="notifyDoneCallback">
            The callback method for when the process is complete.
            </param>
            <remarks>
            Used internally for asynchronous operations.
            </remarks>
        </member>
        <member name="M:Spss.SpssConvert.ToFile(System.Data.DataTable,System.String,System.Action{Spss.SpssVariable})">
            <summary>
            Call to convert data to SPSS format using a passed in SQL query to provide the data.
            </summary>
            <param name="dataTable">The DataTable to convert to SPSS format</param>
            <param name="spssSavFilename">The fully-qualified target .SAV file to save results to</param>
            <param name="fillInMetaDataCallBack">Callback function to provide per-variable metadata</param>
        </member>
        <member name="M:Spss.SpssConvert.ToFile(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.Action{Spss.SpssVariable})">
            <summary>
            Call to convert data to SPSS format using a passed in SQL query to provide the data.
            </summary>
            <param name="dataTable">The DataTable to convert to SPSS format</param>
            <param name="data">An enumerable list of DataRows.</param>
            <param name="spssSavFilename">The fully-qualified target .SAV file to save results to</param>
            <param name="fillInMetaDataCallBack">Callback function to provide per-variable metadata</param>
        </member>
        <member name="M:Spss.SpssConvert.ToFileAsync(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.Action{Spss.SpssVariable},System.EventHandler)">
            <summary>
            Call to asynchronously convert data to SPSS format using a passed in SQL query 
            to provide the data.
            </summary>
            <param name="dataTable">
            The DataTable to convert to SPSS format
            </param>
            <param name="data">An enumerable list of DataRows.</param>
            <param name="spssSavFilename">
            The fully-qualified target .SAV file to save results to
            </param>
            <param name="fillInMetaDataCallback">
            Callback function to provide per-variable metadata
            </param>
            <param name="notifyDoneCallback">
            The method to call when the process is complete.
            </param>
            <returns>
            Returns a handle to poll the status of the conversion.
            </returns>
        </member>
        <member name="M:Spss.SpssConvert.ToStream(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Data.DataRow},System.Action{Spss.SpssVariable})">
            <summary>
            Converts a <see cref="T:System.Data.DataTable"/> to an SPSS .SAV file.
            </summary>
            <param name="dataTable">
            The <see cref="T:System.Data.DataTable"/> with the schema and data to fill into the SPSS .SAV file.
            </param>
            <param name="data">An enumerable list of DataRows.</param>
            <param name="fillInMetaDataCallBack">
            The callback method that will provide additional metadata on each column.
            </param>
            <returns>
            A <see cref="T:System.IO.MemoryStream"/> containing the contents of the SPSS .SAV data file.
            </returns>
            <remarks>
            A temporary file is created during this process, but is guaranteed to be removed
            as the method returns.
            </remarks>
        </member>
        <member name="M:Spss.SpssConvert.ToDdi(System.IO.Stream)">
            <summary>
            Converts the metadata in an SPSS .SAV data file into a DDI codebook.
            </summary>
            <param name="spssSav">
            The stream containing the SPSS .SAV data file.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlDocument"/> containing all the metadata.
            </returns>
        </member>
        <member name="M:Spss.SpssConvert.ToDdi(System.String)">
            <summary>
            Converts the metadata in an SPSS .SAV data file into a DDI codebook.
            </summary>
            <param name="spssSavFilename">
            The filename of the SPSS .SAV data file.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlDocument"/> containing all the metadata.
            </returns>
        </member>
        <member name="M:Spss.SpssConvert.ToDataTable(System.IO.Stream)">
            <summary>
            Converts the metadata in an SPSS .SAV data file into a DataTable.
            </summary>
            <param name="spssSav">
            The stream containing the SPSS .SAV data file.
            </param>
            <returns>
            The <see cref="T:System.Data.DataTable"/> containing all the metadata.
            </returns>
        </member>
        <member name="M:Spss.SpssConvert.ToDataTable(System.String)">
            <summary>
            Converts the metadata in an SPSS .SAV data file into a DataTable.
            </summary>
            <param name="spssSavFilename">
            The filename of the SPSS .SAV data file.
            </param>
            <returns>
            The <see cref="T:System.Data.DataTable"/> containing all the metadata.
            </returns>
        </member>
        <member name="P:Spss.SpssConvert.NotifyDoneCallback">
            <summary>
            The callback method for when the process is complete.
            </summary>
        </member>
        <member name="T:Spss.SpssFileAccess">
            <summary>
            The three levels of file access supported by SPSS.
            </summary>
        </member>
        <member name="F:Spss.SpssFileAccess.Create">
            <summary>
            A new file is being written.
            </summary>
        </member>
        <member name="F:Spss.SpssFileAccess.Read">
            <summary>
            Read-only access to metadata and data.
            </summary>
        </member>
        <member name="F:Spss.SpssFileAccess.Append">
            <summary>
            Data is being added to an existing file.
            </summary>
        </member>
        <member name="T:Spss.SpssDataDocument">
            <summary>
            Manages reading from and writing to SPSS data files.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.#ctor(System.String,Spss.SpssFileAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssDataDocument"/> class
            and opens an existing SPSS file, or creates a new one.
            </summary>
            <param name="filename">The path of the file to open/create.</param>
            <param name="access">The desired file access.</param>
        </member>
        <member name="M:Spss.SpssDataDocument.Open(System.String,Spss.SpssFileAccess)">
            <summary>
            Opens an SPSS data document for reading or appending.
            </summary>
            <param name="filename">
            The filename of the existing document to open.
            </param>
            <param name="access">
            <see cref="F:System.IO.FileAccess.Read"/> for read only access, or 
            <see cref="F:System.IO.FileAccess.Write"/> for append access.
            </param>
            <returns>
            The newly opened <see cref="T:Spss.SpssDataDocument">SPSS data document</see>.
            </returns>
            <remarks>
            This method is only for opening existing data documents.
            To create a new document, use the <see cref="M:Spss.SpssDataDocument.Create(System.String)"/> method.
            </remarks>
        </member>
        <member name="M:Spss.SpssDataDocument.Create(System.String)">
            <summary>
            Creates a new SPSS data document.
            </summary>
            <param name="filename">
            The filename of the new document to create.
            </param>
            <returns>
            The newly created <see cref="T:Spss.SpssDataDocument">SPSS data document</see>.
            </returns>
        </member>
        <member name="M:Spss.SpssDataDocument.Create(System.String,System.String)">
            <summary>
            Creates a new SPSS data document, initializing its dictionary 
            by copying the dictionary from an existing SPSS data file.
            </summary>
            <param name="filename">
            The filename of the new document to create.
            </param>
            <param name="copyDictionaryFromFileName">
            The filename of the existing SPSS data file to copy the dictionary from.
            </param>
            <returns>
            The newly created <see cref="T:Spss.SpssDataDocument">SPSS data document</see>.
            </returns>
        </member>
        <member name="M:Spss.SpssDataDocument.Close">
            <summary>
            Closes the SAV that is open for reading or writing.  
            If no file is open, close() simply returns.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.CommitDictionary">
            <summary>
            Commits the dictionary of a newly created SPSS file.
            </summary>
            <remarks>
            This method should be called after all variables
            have been added to the data file.
            </remarks>
        </member>
        <member name="M:Spss.SpssDataDocument.ImportData(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            Imports data (and optionally metadata) into the document.
            </summary>
            <param name="table">The table.</param>
            <param name="data">The data, which may just be <paramref name="table"/>.Rows.</param>
        </member>
        <member name="M:Spss.SpssDataDocument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.EnsureNotClosed">
            <summary>
            Throws an InvalidOperationException if the document has been closed.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.EnsureAuthoringDictionary">
            <summary>
            Throws an InvalidOperationException if we're not in authoring dictionary mode.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.OnDictionaryCommitted">
            <summary>
            Raises the <see cref="E:Spss.SpssDataDocument.DictionaryCommitted"/> event.
            </summary>
        </member>
        <member name="M:Spss.SpssDataDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:Spss.SpssDataDocument.DictionaryCommitted">
            <summary>
            An event raised when the dictionary has just been committed.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.IsAuthoringDictionary">
            <summary>
            Gets a value indicating whether the data file is in a dictionary writing state.
            </summary>
            <remarks>
            Dictionary writing is the first step in authoring an SPSS data file,
            and must be completed before any data rows is written to the file.
            </remarks>
        </member>
        <member name="P:Spss.SpssDataDocument.AccessMode">
            <summary>
            Gets a value indicating whether this document is open for read or write access.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.Filename">
            <summary>
            Gets the filename of the open document.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.IsClosed">
            <summary>
            Gets a value indicating whether this document has been closed.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.IsCompressed">
            <summary>
            Gets or sets a value indicating whether the SPSS file is compressed on disk.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.Variables">
            <summary>
            Gets the set of variables defined in the SPSS data file.
            </summary>
        </member>
        <member name="P:Spss.SpssDataDocument.Cases">
            <summary>
            Gets the set of all cases saved in the data file.
            </summary>
            <value>
            In SPSS, a case is a row of data.
            </value>
        </member>
        <member name="P:Spss.SpssDataDocument.SystemMissingValue">
            <summary>
            Gets the SPSS-defined system missing value.
            </summary>
            <remarks>
            Setting a numeric variable to this value is equivalent in purpose
            to setting DBNull.Value in a database.
            </remarks>
        </member>
        <member name="P:Spss.SpssDataDocument.Handle">
            <summary>
            Gets the SPSS file handle for the open document.
            </summary>
        </member>
        <member name="T:Spss.SpssDateVariable">
            <summary>
            Represents an SPSS data variable that stores date information.
            </summary>
        </member>
        <member name="T:Spss.SpssVariable">
            <summary>
            Represents an SPSS data variable.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssNumericVariable"/> class.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.#ctor(Spss.SpssVariablesCollection,System.String)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssNumericVariable"/> class.
            </summary>
            <param name="variables">The containing collection.</param>
            <param name="varName">The name of the variable.</param>
        </member>
        <member name="M:Spss.SpssVariable.Clone">
            <summary>
            Clones the variable for use in another <see cref="T:Spss.SpssDataDocument"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spss.SpssVariable.CloneTo(Spss.SpssVariable)">
            <summary>
            Copies the fields from this variable into another previously created 
            <see cref="T:Spss.SpssVariable"/>.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.VerifyNotCommittedVariable">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> when called
            after the variable has been committed to the dictionary.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.CommitToDictionary">
            <summary>
            Writes the variable's metadata out to the dictionary of the SPSS data file.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.Update">
            <summary>
            Updates the changed attributes of the variable within SPSS.
            </summary>
        </member>
        <member name="M:Spss.SpssVariable.AddToCollection(Spss.SpssVariablesCollection)">
            <summary>
            Informs this variable that it is being added to a <see cref="T:Spss.SpssVariablesCollection"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when this variable already belongs to a different collection.
            </exception>
        </member>
        <member name="M:Spss.SpssVariable.RemoveFromCollection(Spss.SpssVariablesCollection)">
            <summary>
            Informs this variable that it is being removed from a <see cref="T:Spss.SpssVariablesCollection"/>.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.IsInCollection">
            <summary>
            Gets a value indicating whether this variable has been added to a collection yet.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.IsCommitted">
            <summary>
            Gets a value indicating whether this variable has been committed to the SPSS data file.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.Variables">
            <summary>
            The collection of variables to which this one belongs.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.FileHandle">
            <summary>
            The file handle of the SPSS data document whose variables are being managed.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.Handle">
            <summary>
            The variable handle assigned by SPSS for this variable.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.Name">
            <summary>
            Gets the name of the variable.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.Label">
            <summary>
            Gets or sets the variable label.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.Value">
            <summary>
            Gets or sets the data value of this variable within a specific case.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.SpssType">
            <summary>
            Gets the SPSS type for the variable.
            </summary>
            <value>For numeric/date types, this is 0.  For strings, this is the length of the column.</value>
        </member>
        <member name="P:Spss.SpssVariable.ColumnWidth">
            <summary>
            The width to reserve for this variable when printed.
            </summary>
        </member>
        <member name="P:Spss.SpssVariable.MeasurementLevel">
            <summary>
            Gets or sets the measurement level.
            </summary>
            <value>The measurement level.</value>
        </member>
        <member name="P:Spss.SpssVariable.Alignment">
            <summary>
            Gets or sets the alignment of the variable.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="M:Spss.SpssDateVariable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssDateVariable"/> class
            for use when defining a new variable.
            </summary>
        </member>
        <member name="M:Spss.SpssDateVariable.#ctor(Spss.SpssVariablesCollection,System.String,Spss.FormatTypeCode,System.Int32,Spss.FormatTypeCode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssDateVariable"/> class.
            for use in loading variables from an existing SPSS data file.
            </summary>
            <param name="variables">The containing collection.</param>
            <param name="varName">The name of the variable.</param>
            <param name="writeFormat">The write format.</param>
            <param name="writeWidth">Width of the write.</param>
            <param name="printFormat">The print format.</param>
            <param name="printWidth">Width of the print.</param>
        </member>
        <member name="P:Spss.SpssDateVariable.MissingValues">
            <summary>
            Gets or sets the missing values for this variable.
            </summary>
            <value>The missing values.</value>
            <remarks>
            A maximum of three maximum values may be supplied.
            </remarks>
        </member>
        <member name="P:Spss.SpssDateVariable.SpssType">
            <summary>
            Gets the SPSS type for the variable.
            </summary>
        </member>
        <member name="P:Spss.SpssDateVariable.Value">
            <summary>
            Gets or sets the data value of this variable within a specific case.
            </summary>
            <remarks>
            Null values are translated to and from 
            <see cref="P:Spss.SpssDataDocument.SystemMissingValue"/> transparently.
            </remarks>
        </member>
        <member name="T:Spss.SpssException">
            <summary>
            Thrown when any spssio32.dll function returns a status code other than SPSS_OK.
            The error number of the exception represents the result code.
            </summary>
        </member>
        <member name="M:Spss.SpssException.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssException"/> class,
            for deserialization.
            </summary>
        </member>
        <member name="M:Spss.SpssException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssException"/> class,
            for deserialization.
            </summary>
        </member>
        <member name="M:Spss.SpssException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssException"/> class,
            for leaving a custom message.
            </summary>
        </member>
        <member name="M:Spss.SpssException.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssException"/> class,
            for leaving a custom message.
            </summary>
        </member>
        <member name="M:Spss.SpssException.#ctor(Spss.ReturnCode,System.String)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssException"/> class.
            </summary>
            <param name="spssResultCode">
            The SPSS error code that caused the exception.
            </param>
            <param name="spssFunction">
            The name of the SPSS function that returned the error code.
            </param>
        </member>
        <member name="M:Spss.SpssException.ThrowOnFailure(Spss.ReturnCode,System.String)">
            <summary>
            Throws an <see cref="T:Spss.SpssException"/> if a prior call into SPSS failed.
            </summary>
            <param name="returnCode">The return code actually received from the SPSS function.</param>
            <param name="spssFunctionName">Name of the SPSS function invoked.</param>
            <returns>The value of <paramref name="returnCode"/>.</returns>
            <remarks>
            This method overload is here to avoid the CLR (or C# compiler) automatically instantiating
            an empty params array to callers who don't pass extra returnCode.
            </remarks>
        </member>
        <member name="M:Spss.SpssException.ThrowOnFailure(Spss.ReturnCode,System.String,Spss.ReturnCode[])">
            <summary>
            Throws an <see cref="T:Spss.SpssException"/> if a prior call into SPSS failed.
            </summary>
            <param name="returnCode">The return code actually received from the SPSS function.</param>
            <param name="spssFunctionName">Name of the SPSS function invoked.</param>
            <param name="acceptableReturnCodes">The acceptable return codes that should not result in a thrown exception (SPSS_OK is always ok).</param>
            <returns>The value of <paramref name="returnCode"/>.</returns>
        </member>
        <member name="P:Spss.SpssException.SpssResultCode">
            <summary>
            Gets the original <see cref="T:Spss.ReturnCode">SPSS error code</see> returned that caused this exception.
            </summary>
        </member>
        <member name="M:Spss.SpssSafeHandle.#ctor(System.Int32,Spss.SpssFileAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssSafeHandle"/> class.
            </summary>
            <param name="handle">The SPSS handle.</param>
            <param name="accessMode">The access mode the handle was opened with.</param>
        </member>
        <member name="M:Spss.SpssSafeHandle.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="T:Spss.SpssNumericVariable">
            <summary>
            Represents an SPSS data variable that stores numeric information.
            </summary>
            <remarks>
            Both integer and floating point numbers are handled through this
            class.
            </remarks>
        </member>
        <member name="M:Spss.SpssNumericVariable.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssNumericVariable"/> class,
            for use when defining a new variable.
            </summary>
        </member>
        <member name="M:Spss.SpssNumericVariable.#ctor(Spss.SpssVariablesCollection,System.String,Spss.FormatTypeCode,System.Int32,System.Int32,Spss.FormatTypeCode,System.Int32,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssNumericVariable"/> class,
            for use in loading variables from an existing SPSS data file.
            </summary>
            <param name="variables">The containing collection.</param>
            <param name="varName">The name of the variable.</param>
            <param name="writeFormat">The write format.  The default is <see cref="F:Spss.FormatTypeCode.SPSS_FMT_F"/></param>
            <param name="writeDecimal">The write decimal.</param>
            <param name="writeWidth">Width of the write.</param>
            <param name="printFormat">The print format.  The default is <see cref="F:Spss.FormatTypeCode.SPSS_FMT_F"/></param>
            <param name="printDecimal">The print decimal.</param>
            <param name="printWidth">Width of the print.</param>
        </member>
        <member name="M:Spss.SpssNumericVariable.Update">
            <summary>
            Updates details of the variable.
            </summary>
        </member>
        <member name="P:Spss.SpssNumericVariable.MissingValues">
            <summary>
            Gets or sets the missing values for this variable.
            </summary>
            <value>The missing values.</value>
            <remarks>
            A maximum of three maximum values may be supplied.
            </remarks>
        </member>
        <member name="P:Spss.SpssNumericVariable.SpssType">
            <summary>
            Gets the SPSS type for the variable.
            </summary>
        </member>
        <member name="P:Spss.SpssNumericVariable.ValueLabels">
            <summary>
            The set of value labels (response values and labels) that are defined.
            </summary>
        </member>
        <member name="P:Spss.SpssNumericVariable.Value">
            <summary>
            Gets or sets the data value of this variable within a specific case.
            </summary>
            <remarks>
            Null values are translated to and from 
            <see cref="P:Spss.SpssDataDocument.SystemMissingValue"/> transparently.
            </remarks>
        </member>
        <member name="T:Spss.SpssNumericVariableValueLabelsDictionary">
            <summary>
            A collection of value labels for a <see cref="T:Spss.SpssNumericVariable"/>.
            </summary>
        </member>
        <member name="T:Spss.SpssVariableValueLabelsDictionary`1">
            <summary>
            A collection of value labels for a <see cref="T:Spss.SpssVariable"/>.
            </summary>
        </member>
        <member name="F:Spss.SpssVariableValueLabelsDictionary`1.isLoadedFromFileYet">
            <summary>
            Tracks whether the value labels have been initialized from a data file yet.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.#ctor(Spss.SpssVariable,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableValueLabelsDictionary`1"/> class.
            </summary>
            <param name="variable">The hosting variable</param>
            <param name="comparer">The comparer; may be <c>null</c>.</param>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.Add(`0,System.String)">
            <summary>
            Adds a value label.
            </summary>
            <param name="value">
            The response value to associate with the new response label.
            </param>
            <param name="label">
            The new response label.
            </param>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.Remove(`0)">
            <summary>
            Removes a value label.
            </summary>
            <param name="value">
            The response value to remove.
            </param>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.Update">
            <summary>
            Updates the SPSS data file with changes made to the collection.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.LoadFromSpssFile">
            <summary>
            Initializes the value labels dictionary from the SPSS data file.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.EnsureNotReadOnly">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if the list of 
            value labels should not be altered at this state.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.CopyTo(Spss.SpssVariableValueLabelsDictionary{`0})">
            <summary>
            Copies the value labels defined in this list to another variable.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableValueLabelsDictionary`1.GetEnumerator">
            <summary>
            Gets the enumerator for the class.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableValueLabelsDictionary`1.IsReadOnly">
            <summary>
            Gets a value indicating whether this list of value labels is read only.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableValueLabelsDictionary`1.Variable">
            <summary>
            The variable whose labels are being listed.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableValueLabelsDictionary`1.FileHandle">
            <summary>
            Gets the SPSS file handle of the data document.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableValueLabelsDictionary`1.Item(`0)">
            <summary>
            Gets or sets the response label for some response value.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableValueLabelsDictionary`1.Count">
            <summary>
            Gets the number of value labels that are defined.
            </summary>
        </member>
        <member name="M:Spss.SpssNumericVariableValueLabelsDictionary.#ctor(Spss.SpssVariable)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssNumericVariableValueLabelsDictionary"/> class.
            </summary>
            <param name="variable">The variable containing this collection.</param>
        </member>
        <member name="M:Spss.SpssNumericVariableValueLabelsDictionary.Update">
            <summary>
            Updates the SPSS data file with changes made to the collection.
            </summary>
        </member>
        <member name="M:Spss.SpssNumericVariableValueLabelsDictionary.LoadFromSpssFile">
            <summary>
            Initializes the value labels dictionary from the SPSS data file.
            </summary>
        </member>
        <member name="T:Spss.SpssSafeWrapper">
            <summary>
            Very thin SpssSafeWrapper class for functions exposed by spssio32.dll.
            </summary>
        </member>
        <member name="T:Spss.SpssThinWrapper">
            <summary>
            A very thin SpssSafeWrapper that provides access to all the functions 
            exposed from the SPSSIO*.dll library provided with SPSS 20.
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_VARNAME">
            <summary>
            Maximum length of a variable name
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_SHORTVARNAME">
            <summary>
            Short (compatibility) variable name.
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_SHORTSTRING">
            <summary>
            Maximum length of a short string variable
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_IDSTRING">
            <summary>
            Maximum length of a file label string
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_LONGSTRING">
            <summary>
            (old) Maximum length of a long string variable
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_VERYLONGSTRING">
            <summary>
            Maximum length of a long string variable.
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_VALLABEL">
            <summary>
            Maximum length of a value label
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_VARLABEL">
            <summary>
            Maximum length of a variable label
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.SPSS_MAX_7SUBTYPE">
            <summary>
            Maximum record 7 subtype
            </summary>
        </member>
        <member name="F:Spss.SpssThinWrapper.spssOpenWriteImpl">
            <summary>
            <see cref="T:Spss.SpssThinWrapper.spssOpenWriteDelegate"/>
            </summary>
        </member>
        <member name="M:Spss.SpssThinWrapper.#ctor">
            <summary>
            Constructor for <see cref="T:Spss.SpssThinWrapper"/> class.  Not to be used.
            </summary>
            <remarks>
            This class is a static class, and should not be instantiated.
            </remarks>
        </member>
        <member name="M:Spss.SpssThinWrapper.LoadSpssDll">
            <summary>
            Allow only a single thread to enter.
            
            <seealso href="http://archive.msdn.microsoft.com/DynamicDllLoading/Wiki/Print.aspx?title=Home&amp;version=5&amp;action=Print"/>
            </summary>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCloseAppendDelegate">
            <summary>
            Closes an SPSS file that was opened using <see cref="T:Spss.SpssThinWrapper.spssOpenAppendDelegate"/>.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>.
            </returns>
            <remarks>
            This function closes the data file associated with handle, which must have been opened
            for appending cases using <see cref="T:Spss.SpssThinWrapper.spssOpenAppendDelegate"/>. The file handle handle becomes invalid
            and no further operations can be performed using it.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCloseReadDelegate">
            <summary>
            Closes an SPSS file that was opened using <see cref="T:Spss.SpssThinWrapper.spssOpenReadDelegate"/>.
            </summary>
            <param name="handle"></param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>.
            </returns>
            <remarks>
            This function closes the data file associated with handle, which must have been opened
            for reading using <see cref="T:Spss.SpssThinWrapper.spssOpenReadDelegate"/>. The file handle handle becomes 
            invalid and no further operations can be performed using it.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCloseWriteDelegate">
            <summary>
            Closes an SPSS file that was opened using <see cref="T:Spss.SpssThinWrapper.spssOpenWriteDelegate"/>.
            </summary>
            <param name="handle"></param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>.
            </returns>
            <remarks>
            This function closes the data file associated with handle, which must have been opened
            for writing using <see cref="T:Spss.SpssThinWrapper.spssOpenWriteDelegate"/>. The file handle handle becomes invalid
            and no further operations can be performed using it.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate">
            <summary>
            Writes a case to an SPSS data file after its values have been set.
            </summary>
            <param name="handle"></param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>.
            </returns>
            <remarks>
            This function writes a case to the data file specified by the handle. It must be called after
            setting the values of variables through <see cref="T:Spss.SpssThinWrapper.spssSetValueNumericDelegate"/> and 
            <see cref="T:Spss.SpssThinWrapper.spssSetValueCharDelegate"/>.
            Any variables left unset will get the system-missing value if they are numeric and all
            blanks if they are strings. Unless spssCommitCaseRecord is called, the case will not be
            written out.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate">
            <summary>
            Writes the data dictionary to the data file.  To be used after dictionary defining 
            functions are called, and before cases are written.
            </summary>
            <param name="handle"></param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_EMPTY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS"/>.
            </returns>
            <remarks>
            This function writes the data dictionary to the data file associated with handle. Before
            any case data can be written, the dictionary must be committed; once the dictionary has
            been committed, no further changes can be made to it.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssConvertDateDelegate">
            <summary>
            Converts a day/month/year into SPSS format.
            </summary>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_DATE"/>.
            </returns>
            <remarks>
            This function converts a Gregorian date expressed as day-month-year to the internal
            SPSS date format. The time portion of the date variable is set to 0:00. To set the time
            portion of the date variable to another value, use spssConvertTime and add the resulting
            value to *spssDate. Dates before October 15, 1582, are considered invalid.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssConvertSPSSDateDelegate">
            <summary>
            Extracts the date from an SPSS date field.
            </summary>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_DATE"/>.
            </returns>
            <remarks>
            This function converts the date (as distinct from time) portion of a value in internal SPSS
            date format to Gregorian style.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssConvertSPSSTimeDelegate">
            <summary>
            Extracts the time of day from an SPSS date field.
            </summary>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_TIME"/>.
            </returns>
            <remarks>
            This function breaks a value in internal SPSS date format into a day number (since October
            14, 1582) plus the hour, minute, and second values. Note that the seconds value is
            stored in a double since it may have a fractional part.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssConvertTimeDelegate">
            <summary>
            Converts a time of day to the SPSS time format.
            </summary>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_TIME"/>.
            </returns>
            <remarks>
            This function converts a time given as day, hours, minutes, and seconds to the internal
            SPSS format. The day value is the number of days since October 14, 1582, and is typically
            zero, especially when this function is used in conjunction with spssConvertDate.
            Note that the seconds value is stored in a double since it may have a fractional part.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssCopyDocumentsDelegate">
            <summary>
            Copies stored documents from one file to another.
            </summary>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>.
            </returns>
            <remarks>
            This function copies stored documents, if any, from the file associated with fromHandle
            to that associated with toHandle. The latter must be open for output. If the target file already
            has documents, they are discarded. If the source file has no documents, the target
            will be set to have none, too.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeDateVariablesDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetDateVariablesDelegate"/>.
            </summary>
            <param name="dateInfo">
            Vector of date variable indexes.
            </param>
            <returns>
            Always returns <see cref="F:Spss.ReturnCode.SPSS_OK"/> indicating success.
            </returns>
            <remarks>
            This function is called to return the memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetDateVariablesDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeMultRespDefsDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetMultRespDefsDelegate"/>.
            </summary>
            <param name="mrespDefs">
            ASCII string containing the definitions.
            </param>
            <returns>
            The function always succeeds and always returns <see cref="F:Spss.ReturnCode.SPSS_OK"/>.
            </returns>
            <remarks>
            This function releases the memory which was acquired by <see cref="T:Spss.SpssThinWrapper.spssGetMultRespDefsDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeVarCValueLabelsDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>.
            </summary>
            <param name="values">
            Array of pointers to values returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>
            </param>
            <param name="labels">
            Array of pointers to labels returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>
            </param>
            <param name="numLabels">
            Number of values or labels returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_CANNOT_FREE"/>
            </returns>
            <remarks>
            This function frees the two arrays and the value and label strings allocated on the heap
            by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeVariableSetsDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetVariableSetsDelegate"/>.
            </summary>
            <param name="varSets">
            The string defining the variable sets
            </param>
            <returns>
            Always returns <see cref="F:Spss.ReturnCode.SPSS_OK"/> indicating success.
            </returns>
            <remarks>
            This function is called to return the memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetVariableSetsDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeVarNamesDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/>.
            </summary>
            <param name="varNames">
            Array of pointers to names returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/>
            </param>
            <param name="varTypes">
            Array of variable types returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/>
            </param>
            <param name="numVars">
            Number of variables returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/>
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_CANNOT_FREE"/>.
            </returns>
            <remarks>
            This function frees the two arrays and the name strings allocated on the heap by
            <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssFreeVarNValueLabelsDelegate">
            <summary>
            Frees memory allocated by <see cref="T:Spss.SpssThinWrapper.spssGetVarNValueLabelsDelegate"/>.
            </summary>
            <param name="values">
            Array of values returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNValueLabelsDelegate"/>
            </param>
            <param name="labels">
            Array of pointers to labels returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNValueLabelsDelegate"/>
            </param>
            <param name="numLabels">
            Number of values or labels returned by <see cref="T:Spss.SpssThinWrapper.spssGetVarNValueLabelsDelegate"/>
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_CANNOT_FREE"/>
            </returns>
            <remarks>
            This function frees the two arrays and the value and label strings allocated on the heap
            by <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetCaseSizeDelegate">
            <summary>
            Reports the number of bytes taken up by any one case.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseSize">
            Pointer to size of case in bytes
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>.
            </returns>
            <remarks>
            This function reports the size of a raw case record for the file associated with handle.
            The case size is reported in bytes and is meant to be used in conjunction with the lowlevel
            case input/output procedures <see cref="T:Spss.SpssThinWrapper.spssWholeCaseInDelegate"/> and 
            <see cref="T:Spss.SpssThinWrapper.spssWholeCaseOutDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetCaseWeightVarDelegate">
            <summary>
            Reports the name of the case weight variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Pointer to the buffer to hold name of the case weight variable
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_CASEWGT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_CASEWGT"/>.
            </returns>
            <remarks>
            This function reports the name of the case weight variable. The name is copied to the
            buffer pointed to by varName as a null-terminated string. Since a variable name can be
            up to <see cref="F:Spss.SpssThinWrapper.SPSS_MAX_VARNAME"/> characters in length, the size of the buffer 
            must be at least <see cref="F:Spss.SpssThinWrapper.SPSS_MAX_VARNAME"/>+1.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetCompressionDelegate">
            <summary>
            Gets the compression attribute of a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="compSwitch">
            Pointer to compression attribute. Upon return, *compSwitch is 1 if
            the file is compressed; 0 otherwise.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function reports the compression attribute of an SPSS data file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetDateVariablesDelegate">
            <summary>
            Reports TRENDS date variable information.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="numofElements">
            Number of elements in allocated array
            </param>
            <param name="dateInfo">
            Pointer to first element of the allocated array
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_DATEINFO"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function reports the TRENDS date variable information, if any, in an SPSS data file.
            It places the information in a dynamically allocated long array, sets *numofElements to
            the number of elements in the array, and sets *dateInfo to point to the array. The caller is
            expected to free the array by calling <see cref="T:Spss.SpssThinWrapper.spssFreeDateVariablesDelegate"/> when it is no longer needed.
            The variable information is copied directly from record 7, subtype 3. Its first six elements
            comprise the "fixed" information, followed by a sequence of one or more three-element
            groups.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetDEWFirstDelegate">
            <summary>
            Retrieves the first block of SPSS Data Entry information from a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="data">
            Returned as data from the file
            </param>
            <param name="maxData">
            Maximum bytes to return
            </param>
            <param name="nData">
            Returned as number of bytes returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_DEW"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The client can retrieve DEW information (file information that is private to the SPSS
            Data Entry product) from a file in whatever increments are convenient. The first such
            increment is retrieved by calling spssGetDEWFirst, and subsequent segments are
            retrieved by calling spssGetDEWNext as many times as necessary. As with
            spssGetDEWInfo, spssGetDEWFirst will return SPSS_NO_DEW if the file was written
            with a byte order that is the reverse of that of the host.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetDEWGUIDDelegate">
            <summary>
            Gets the Data Entry GUID from a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="asciiGUID">
            Returned as the file's GUID in character form or a null string if the
            file contains no GUID
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            Data Entry for Windows maintains a GUID in character form as a uniqueness indicator.
            Two files have identical dictionaries and DEW information if they have the same
            GUID. Note that the spssOpenWriteCopy function will not copy the source file’s
            GUID. spssGetDEWGUID allows the client to read a file’s GUID, if any. The client
            supplies a 257 byte string in which the null-terminated GUID is returned.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetDEWInfoDelegate">
            <summary>
            Gets the length and hash of the Data Entry information in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="Length">
            Returned as the length in bytes
            </param>
            <param name="HashTotal">
            Returned as the hash total
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_DEW"/>.
            </returns>
            <remarks>
            This function can be called before actually retrieving DEW information (file
            information that is private to the SPSS Data Entry product) from a file, to obtain some
            attributes of that information--specifically its length in bytes and its hash total. The
            hash total is, by convention, contained in the last four bytes to be written. Because it is
            not cognizant of the structure of the DEW information, the I/O DLL is unable to correct
            the byte order of numeric information generated on a foreign host. As a result, the
            DEW information is discarded if the file has a byte order that is the reverse of that of
            the host, and calls to spssGetDEWInfo will return SPSS_NO_DEW.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetDEWNextDelegate">
            <summary>
            Retrieves the next block of SPSS Data Entry information from a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="data">
            Returned as data from the file
            </param>
            <param name="maxData">
            Maximum bytes to return
            </param>
            <param name="nData">
            Returned as number of bytes returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DEW_NOFIRST"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The client can retrieve DEW information (file information that is private to the SPSS
            Data Entry product) from a file in whatever increments are convenient. The first such
            increment is retrieved by calling <see cref="T:Spss.SpssThinWrapper.spssGetDEWFirstDelegate"/>, and subsequent segments are
            retrieved by calling spssGetDEWNext as many times as necessary. As with
            <see cref="T:Spss.SpssThinWrapper.spssGetDEWInfoDelegate"/>, <see cref="T:Spss.SpssThinWrapper.spssGetDEWFirstDelegate"/> will return SPSS_NO_DEW if the file was written
            with a byte order that is the reverse of that of the host.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetEstimatedNofCasesDelegate">
            <summary>
            Estimates number of cases in a data file.  
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseCount">
            Returned as estimated n of cases
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>.
            </returns>
            <remarks>
            Although not strictly required for direct access input, this function helps in reading
            SPSS data files from releases earlier than 6.0. Some of these data files did not contain
            number of cases information, and <see cref="T:Spss.SpssThinWrapper.spssGetNumberofCasesDelegate"/> will return -1 cases. This
            function will return a precise number for uncompressed files and an estimate (based on
            overall file size) for compressed files. It cannot be used on files open for appending data.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetNumberofCasesDelegate">
            <summary>
            Gets the number of cases in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseCount">
            Pointer to number of cases
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>.
            </returns>
            <remarks>
            This function reports the number of cases present in a data file open for reading.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetIdStringDelegate">
            <summary>
            Gets the file label of a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="id">
            File label buffer
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function copies the file label of the SPSS data file associated with <paramref>handle</paramref> into the
            buffer pointed to by id. The label is at most 64 characters long and null-terminated.
            Thus, the size of the buffer should be at least 65. If an input data file is associated with
            the handle, the label will be exactly 64 characters long, padded with blanks as
            necessary.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetMultRespDefsDelegate">
            <summary>
            Retrieves the definitions from a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="mrespDefs">
            Returned as a pointer to a string
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MULTRESP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function retrieves the definitions from an SPSS data file. The definitions are stored
            as a null-terminated ASCII string which is very similar to that containing the variable
            set definitions. The memory allocated by this function to contain the string must be freed
            by calling <see cref="T:Spss.SpssThinWrapper.spssFreeMultRespDefsDelegate"/>. If the file contains no multiple response definitions,
            *mrespDefs is set to NULL, and the function returns the warning code
            <see cref="F:Spss.ReturnCode.SPSS_NO_MULTRESP"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetNumberofVariablesDelegate">
            <summary>
            Gets the number of variables in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="numVars">
            Pointer to number of variables
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>.
            </returns>
            <remarks>
            This function reports the number of variables present in a data file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetReleaseInfoDelegate">
            <summary>
            Gets information on the running version of SPSS, and the hosting computer.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="relInfo">
            Array of int in which release- and machine-specific data will be
            stored. This array must have at least eight elements.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE73"/>.
            </returns>
            <remarks>
            This function reports release- and machine-specific information about the file
            associated with handle. The information consists of an array of eight int values copied
            from record type 7, subtype 3 of the file, and is useful primarily for debugging. The
            array elements are, in order, release number (index 0), release subnumber (1), special
            release identifier number (2), machine code (3), floating-point representation code (4),
            compression scheme code (5), big/little-endian code (6), and character representation
            code (7).
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetSystemStringDelegate">
            <summary>
            Gets the name of the system that created a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="sysName">
            The originating system name
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function returns the name of the system under which the file was created. It is a
            40-byte blank-padded character field corresponding to the last 40 bytes of record type
            1. Thus, in order to accommodate the information, the parameter 
            <paramref>sysName</paramref> must be at least 41 bytes in length plus the 
            terminating null character.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetTextInfoDelegate">
            <summary>
            Gets the data created by TextSmart.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="textInfo">
            Buffer for text data
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function places the text data created by TextSmart as a null-terminated string in
            the user-supplied buffer <paramref>textInfo</paramref>. The buffer is assumed to be 
            at least 256 characters long; the text data may be up to 255 characters long. 
            If text data are not present in the file, the first character in 
            <paramref>textInfo</paramref> is set to NULL.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetTimeStampDelegate">
            <summary>
            Gets the creation date of a data file, as recorded in the file itself.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="fileDate">
            File creation date
            </param>
            <param name="fileTime">
            File creation time
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function returns the creation date of the file as recorded in the file itself. The creation
            date is a null-terminated 9-byte character field in dd mmm yy format (27 Feb 96),
            and the receiving field must be at least 10 bytes in length. The creation time is a nullterminated
            8-byte character field in hh:mm:ss format (13:12:15), and the receiving field
            must be at least 9 bytes in length.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetValueCharDelegate">
            <summary>
            Gets the string value of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varHandle">
            Handle of the variable
            </param>
            <param name="value">
            Buffer for the value of the string variable
            </param>
            <param name="valueSize">
            Size of value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_CASE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_BUFFER_SHORT"/>.
            </returns>
            <remarks>
            This function gets the value of a string variable for the current case, which is the case
            read by the most recent call to <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>. 
            The value is returned as a null-terminated
            string in the caller-provided buffer value; the length of the string is the length
            of the string variable. Argument valueSize is the allocated size of the buffer value,
            which must be at least the length of the variable plus 1.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetValueNumericDelegate">
            <summary>
            Gets the numeric value of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varHandle">
            Handle of the variable
            </param>
            <param name="value">
            Pointer to the value of the numeric variable
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_CASE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function gets the value of a numeric variable for the current case, which is the case
            read by the most recent call to <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarAlignmentDelegate">
            <summary>
            Gets the alignment of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="alignment">
            Pointer to alignment. 
            Set to <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_LEFT"/>,
            <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_RIGHT"/>, or 
            <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_CENTER"/>
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the alignment attribute of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarCMissingValuesDelegate">
            <summary>
            Gets the missing values of a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="missingFormat">
            Pointer to missing value format code
            </param>
            <param name="missingVal1">
            Buffer for first missing value
            </param>
            <param name="missingVal2">
            Buffer for second missing value
            </param>
            <param name="missingVal3">
            Buffer for third missing value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>.
            </returns>
            <remarks>
            This function reports the missing values of a short string variable. The value of
            *<paramref>missingFormat</paramref> will be in the range 0–3, indicating 
            the number of missing values. The
            appropriate number of missing values is copied to the buffers <paramref>missingVal1</paramref>,
            <paramref>missingVal2</paramref>, and <paramref>missingVal3</paramref>. 
            The lengths of the null-terminated missing value strings
            will be the length of the short string variable in question. Since the latter can be at most
            8 characters long, 9-character buffers are adequate for any short string variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarColumnWidthDelegate">
            <summary>
            Gets the width of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="columnWidth">
            Pointer to column width. Non-negative
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the column width attribute of a variable. A value of
            zero is special and means that the SPSS Data Editor, which is the primary user of this
            attribute, will set an appropriate width using its own algorithm.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarCValueLabelDelegate">
            <summary>
            Gets the value label for a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="value">
            Short string value for which the label is wanted
            </param>
            <param name="label">
            Label for the value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>.
            </returns>
            <remarks>
            This function gets the value label for a given value of a short string variable. The label is
            copied as a null-terminated string into the buffer label, whose size must be at least 61 to
            hold the longest possible value label (60 characters plus the null terminator). To get value
            labels more than 60 characters long, use the <see cref="T:Spss.SpssThinWrapper.spssGetVarCValueLabelLongDelegate"/> function.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarCValueLabelLongDelegate">
            <summary>
            Gets a value label of a string variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Null-terminated variable name
            </param>
            <param name="value">
            Null-terminated value for which label is requested
            </param>
            <param name="labelBuff">
            Returned as null-terminated label
            </param>
            <param name="lenBuff">
            Overall size of labelBuff in bytes
            </param>
            <param name="lenLabel">
            Returned as bytes stored excluding terminator
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>.
            </returns>
            <remarks>
            This function returns a null-terminated value label corresponding to one value of a
            specified variable whose values are short strings. The function permits the client to
            limit the number of bytes (including the null terminator) stored and returns the number
            of data bytes (excluding the null terminator) actually stored. If an error is detected, the
            label is returned as a null string, and the length is returned as 0.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarCValueLabelsDelegate">
            <summary>
            Gets the list of response values and labels for a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="values">
            Pointer to array of pointers to values
            </param>
            <param name="labels">
            Pointer to array of pointers to labels
            </param>
            <param name="numLabels">
            Pointer to number of values or labels
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the set of labeled values and associated labels for a short string variable.
            The number of values is returned as *numLabels. Values are stored into an array
            of *numLabels pointers, each pointing to a char string containing a null-terminated
            value, and *values is set to point to the first element of the array. Each value string is as
            long as the variable. The corresponding labels are structured as an array of *numLabels
            pointers, each pointing to a char string containing a null-terminated label, and *labels is
            set to point to the first element of the array.
            The two arrays and the value and label strings are allocated on the heap. When they
            are no longer needed, <see cref="T:Spss.SpssThinWrapper.spssFreeVarCValueLabelsDelegate"/> should be called to free the memory.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarHandleDelegate">
            <summary>
            Gets the handle for a named variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="varHandle">
            Pointer to handle for the variable. Note that the variable handle is
            a double, and not int or long.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function returns a handle for a variable, which can then be used to read or write
            (depending on how the file was opened) values of the variable. If handle is associated
            with an output file, the dictionary must be written with <see cref="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate"/> 
            before variable handles can be obtained via spssGetVarHandle.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVariableSetsDelegate">
            <summary>
            Gets variable sets information in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varSets">
            Pointer to pointer to variable sets string
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_VARSETS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function reports the variable sets information in the data file. Variable sets
            information is stored in a null-terminated string and a pointer to the string is returned
            in *<paramref>varSets</paramref>. Since the variable sets string is allocated 
            on the heap, the caller should free
            it by calling <see cref="T:Spss.SpssThinWrapper.spssFreeVariableSetsDelegate"/> when it is no longer needed.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarInfoDelegate">
            <summary>
            Gets the name and type of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="iVar">
            Zero origin variable number
            </param>
            <param name="varName">
            Returned as the variable name
            </param>
            <param name="varType">
            Returned as the variable type
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function gets the name and type of one of the variables present in a data file. It
            serves the same purpose as <see cref="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate"/> but returns the information one variable
            at a time and, therefore, can be passed to a Visual Basic program. The storage to receive
            the variable name must be at least 9 bytes in length because the name is returned as a
            null-terminated string. The type code is an integer in the range 0–255, 0 indicating a numeric
            variable and a positive value indicating a string variable of that size.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarLabelDelegate">
            <summary>
            Gets the variable label for some named variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="varLabel">
            Variable label buffer
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function copies the label of variable varName into the buffer pointed to by
            varLabel. Since the variable label is at most 120 characters long and null terminated, the
            size of the buffer should be at least 121. To get labels more than 120 characters long, use
            the spssGetVarLabelLong function.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarLabelLongDelegate">
            <summary>
            Gets the variable label for some named variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Null-terminated variable name
            </param>
            <param name="labelBuff">
            Buffer to receive the null-terminated label
            </param>
            <param name="lenBuff">
            Overall size of labelBuff in bytes
            </param>
            <param name="lenLabel">
            Returned as bytes stored excluding terminator
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function returns the null-terminated label associated with the specified variable but
            restricts the number of bytes (including the null terminator) returned to lenBuff bytes.
            This length can be conveniently specified as sizeof(labelBuff). The function also returns
            the number of data bytes (this time excluding the null terminator) stored. If an error is
            detected, the label is returned as a null string, and the length is returned as 0.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarMeasureLevelDelegate">
            <summary>
            Gets the measurement level of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="measureLevel">
            Pointer to measurement level. Set to 
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_NOM"/>,
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_ORD"/>, or 
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_RAT"/>, 
            for nominal, ordinal, and scale (ratio), respectively
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the measurement level attribute of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarNMissingValuesDelegate">
            <summary>
            Gets the missing values of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="missingFormat">
            Pointer to missing value format code
            </param>
            <param name="missingVal1">
            Buffer for first missing value
            </param>
            <param name="missingVal2">
            Buffer for second missing value
            </param>
            <param name="missingVal3">
            Buffer for third missing value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function reports the missing values of a numeric variable. The value of
            *<paramref>missingFormat</paramref> determines the interpretation of *<paramref>missingVal1</paramref>, *<paramref>missingVal2</paramref>, and
            *<paramref>missingVal3</paramref>. If *missingFormat is SPSS_MISS_RANGE, *<paramref>missingVal1</paramref> and *<paramref>missingVal2</paramref>
            represent the upper and lower limits, respectively, of the range, and *<paramref>missingVal3</paramref> is not
            used. If *missingFormat is SPSS_MISS_RANGEANDVAL, *<paramref>missingVal1</paramref> and *<paramref>missingVal2</paramref>
            represent the range and *<paramref>missingVal3</paramref> is the discrete missing value. If *missingFormat is
            neither of the above, it will be in the range 0–3, indicating the number of discrete missing
            values present. (The macros SPSS_NO_MISSVAL, SPSS_ONE_MISSVAL,
            SPSS_TWO_MISSVAL, and SPSS_THREE_MISSVAL may be used as synonyms for 0–3.)
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarNValueLabelDelegate">
            <summary>
            Gets the value label for a given value of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="value">
            Numeric value for which the label is wanted
            </param>
            <param name="label">
            Label for the value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function gets the value label for a given value of a numeric variable. The label is
            copied as a null-terminated string into the buffer label, whose size must be at least 61 to
            hold the longest possible value label (60 characters) plus the terminator. To get value labels
            more than 60 characters long, use the <see cref="T:Spss.SpssThinWrapper.spssGetVarNValueLabelLongDelegate"/> function.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarNValueLabelLongDelegate">
            <summary>
            Gets the value label for a given value of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Null-terminated variable name
            </param>
            <param name="value">
            Value for which label is requested
            </param>
            <param name="labelBuff">
            Returned as null-terminated label
            </param>
            <param name="lenBuff">
            Overall size of labelBuff in bytes
            </param>
            <param name="lenLabel">
            Returned as bytes stored excluding terminator
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function returns a null-terminated value label corresponding to one value of a specified
            numeric variable. It permits the client to limit the number of bytes (including the
            null terminator) stored and returns the number of data bytes (excluding the null terminator)
            actually stored. If an error is detected, the label is returned as a null string, and the
            length is returned as 0.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarNValueLabelsDelegate">
            <summary>
            Gets a list of all response values and labels for a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="values">
            Pointer to array of double values
            </param>
            <param name="labels">
            Pointer to array of pointers to labels
            </param>
            <param name="numLabels">
            Pointer to number of values or labels
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the set of labeled values and associated labels for a numeric variable.
            The number of values is returned as *numLabels. Values are stored into an array of
            *numLabels double elements, and *values is set to point to the first element of the array.
            The corresponding labels are structured as an array of *numLabels pointers, each pointing
            to a char string containing a null-terminated label, and *labels is set to point to the
            first element of the array.
            The two arrays and the label strings are allocated on the heap. When they are no longer
            needed, <see cref="T:Spss.SpssThinWrapper.spssFreeVarNValueLabelsDelegate"/> should be called to free the memory.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarPrintFormatDelegate">
            <summary>
            Gets print formatting information for a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="printType">
            Pointer to print format type code (file spssdio.h defines macros of
            the form <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes)
            </param>
            <param name="printDec">
            Pointer to number of digits after the decimal
            </param>
            <param name="printWidth">
            Pointer to print format width
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the print format of a variable. Format type, number of decimal
            places, and field width are returned as *<paramref>printType</paramref>, 
            *<paramref>printDec</paramref>, and *<paramref>printWid</paramref>, respectively.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarNamesDelegate">
            <summary>
            Gets the names and types of all variables in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="numVars">
            Pointer to number of variables
            </param>
            <param name="varNames">
            Pointer to array of pointers to variable names
            </param>
            <param name="varTypes">
            Pointer to array of variable types
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the names and types of all the variables present in a data file. The
            number of variables is returned as *numVars. Variable names are structured as an array
            of *numVars pointers, each pointing to a char string containing a variable name, and
            *varNames is set to point to the first element of the array. Variable types are stored into
            a corresponding array of *numVars in elements, and *varTypes is set to point to the first
            element of the array. The type code is an integer in the range 0–255, 0 indicating a numeric
            variable and a positive value indicating a string variable of that size.
            The two arrays and the variable name strings are allocated on the heap. When they
            are no longer needed, <see cref="T:Spss.SpssThinWrapper.spssFreeVarNamesDelegate"/> should be called to free the memory.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssGetVarWriteFormatDelegate">
            <summary>
            Gets the write format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="writeType">
            Pointer to write format type code (file spssdio.h defines macros of
            the form <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes)
            </param>
            <param name="writeDec">
            Pointer to number of digits after the decimal
            </param>
            <param name="writeWidth">
            Pointer to write format width
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the write format of a variable. Format type, number of decimal
            places, and field width are returned as *writeType, *writeDec, and *writeWid,
            respectively.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssHostSysmisValDelegate">
            <summary>
            Gets the missing value for the system.
            </summary>
            <param name="missVal">
            Returned as the system missing value
            </param>
            <remarks>
            This function accesses the same information as <see cref="T:Spss.SpssThinWrapper.spssSysmisValDelegate"/> but returns the
            information via a parameter rather than on the stack as the function result. The problem
            being addressed is that not all languages return doubles from functions in the same
            fashion.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssLowHighValDelegate">
            <summary>
            Gets the lowest and highest values used for numeric missing values on the system.
            </summary>
            <param name="lowest">
            Pointer to "lowest" value
            </param>
            <param name="highest">
            Pointer to "highest" value
            </param>
            <remarks>
            This function returns the "lowest" and "highest" values used for numeric missing value
            ranges on the host system. It may be called at any time.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssOpenAppendDelegate">
            <summary>
            Opens an SPSS file for appending cases.
            </summary>
            <param name="fileName">
            Name of the file
            </param>
            <param name="handle">
            Pointer to handle to be returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INCOMPAT_APPEND"/>.
            </returns>
            <remarks>
            This function opens an SPSS data file for appending cases and returns a handle that
            should be used for subsequent operations on the file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssOpenReadDelegate">
            <summary>
            Opens an SPSS file for reading.
            </summary>
            <param name="fileName">
            Name of the file
            </param>
            <param name="handle">
            Pointer to handle to be returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>.
            </returns>
            <remarks>
            This function opens an SPSS data file for reading and returns a handle that should be
            used for subsequent operations on the file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssOpenWriteDelegate">
            <summary>
            Creates an SPSS file, and prepares for writing.
            </summary>
            <param name="fileName">
            Name of the file
            </param>
            <param name="handle">
            Pointer to handle to be returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            </returns>
            <remarks>
            This function opens a file in preparation for creating a new SPSS data file and returns a
            handle that should be used for subsequent operations on the file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssOpenWriteCopyDelegate">
            <summary>
            Creates a new SPSS data file, with a dictionary copied from an existing file.
            </summary>
            <param name="fileName">
            Name of the new file
            </param>
            <param name="dictFileName">
            Name of existing file
            </param>
            <param name="handle">
            Pointer to handle to be returned
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>.
            </returns>
            <remarks>
            This function opens a file in preparation for creating a new SPSS data file and initializes
            its dictionary from that of an existing SPSS data file. It is useful when you want to modify
            the dictionary or data of an existing file or replace all of its data. The typical sequence
            of operations is to call <see cref="T:Spss.SpssThinWrapper.spssOpenWriteCopyDelegate"/> (newFileName, oldFileName, ...) to open a
            new file initialized with a copy of the old file’s dictionary, then <see cref="T:Spss.SpssThinWrapper.spssOpenReadDelegate"/> (oldFile-
            Name, ...) to open the old file to access its data.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssQueryType7Delegate">
            <summary>
            Gets a value indicating whether a data file contains a specific "type 7" record.
            </summary>
            <param name="fromHandle">
            Handle to the data file
            </param>
            <param name="subType">
            Specific subtype record
            </param>
            <param name="bFound">
            Returned set if the specified subtype was encountered
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_7SUBTYPE"/>.
            </returns>
            <remarks>
            This function can be used to determine whether a file opened for reading or append
            contains a specific "type 7" record. The following type 7 subtypes might be of interest:
            <list type="bullet">
            <item>Subtype 3. Release information</item>
            <item>Subtype 4. Floating point constants including the system missing value</item>
            <item>Subtype 5. Variable set definitions</item>
            <item>Subtype 6. Date variable information</item>
            <item>Subtype 7. Multiple response set definitions</item>
            <item>Subtype 8. Data Entry for Windows (DEW) information</item>
            <item>Subtype 10. TextSmart information</item>
            <item>Subtype 11. Measurement level, column width, and alignment for each variable</item>
            </list>
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate">
            <summary>
            Reads the next case from a data file in preparation for reading its values.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_END"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>.
            </returns>
            <remarks>
            This function reads the next case from a data file into internal buffers. Values of individual
            variables for the case may then be obtained by calling the 
            <see cref="T:Spss.SpssThinWrapper.spssGetValueNumericDelegate"/> and
            <see cref="T:Spss.SpssThinWrapper.spssGetValueCharDelegate"/> procedures.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSeekNextCaseDelegate">
            <summary>
            Prepares SPSS to read data values from a specific case.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseNumber">
            Zero origin case number
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>.
            </returns>
            <remarks>
            This function sets the file pointer of an input file so that the next data case read will be
            the one specified via the caseNumber parameter. A zero origin scheme is used. That
            is, the first case is number 0. The next case can be read by calling either 
            <see cref="T:Spss.SpssThinWrapper.spssWholeCaseInDelegate"/> or <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>. 
            If the specified case is greater than or equal to the
            number of cases in the file, the call to the input function will return 
            <see cref="F:Spss.ReturnCode.SPSS_FILE_END"/>.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetCaseWeightVarDelegate">
            <summary>
            Sets the case weight variable in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            The name of the case weight variable
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function defines variable varName as the case weight variable for the data file
            specified by the handle.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetCompressionDelegate">
            <summary>
            Sets the compression attribute of a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="compSwitch">
            Compression switch
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_COMPSW"/>.
            </returns>
            <remarks>
            This function sets the compression attribute of an SPSS data file. Compression is set
            on if compSwitch is one and off if it is zero. If this function is not called, the output file
            will be uncompressed by default.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetDateVariablesDelegate">
            <summary>
            Sets the Trends date variable information.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="numofElements">
            Size of the array dateInfo
            </param>
            <param name="dateInfo">
            Array containing date variables information
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_DATEINFO"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the Trends date variable information. The array at dateInfo is
            assumed to have numofElements elements that correspond to the data array portion of
            record 7, subtype 3. Its first six elements comprise the “fixed” information, followed
            by a sequence of one or more three-element groups. Since very little validity checking
            is done on the input array, this function should be used with caution and is
            recommended only for copying Trends information from one file to another.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetDEWFirstDelegate">
            <summary>
            Sets the first block of Data Entry information.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="data">
            Pointer to the data to be written
            </param>
            <param name="nBytes">
            Number of bytes to write
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_DEW"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            DEW information (file information which is private to the SPSS Data Entry product)
            can be delivered to the I/O DLL in whatever segments are convenient for the client.
            The spssSetDEWFirst function is called to deliver the first such segment, and
            subsequent segments are delivered by calling spssSetDEWNext as many times as
            necessary.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetDEWGUIDDelegate">
            <summary>
            Sets the unique Data Entry uniqueness GUID.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="asciiGUID">
            The GUID (as a null-terminated string) to be stored on the file
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function stores the Data Entry for Windows uniqueness indicator on the data file.
            It should only be used by the DEW product.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetDEWNextDelegate">
            <summary>
            Sets the next block of information for Data Entry.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="data">
            Pointer to the data to be written
            </param>
            <param name="nBytes">
            Number of bytes to write
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DEW_NOFIRST"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The DEW information (file information that is private to the SPSS Data Entry product)
            can be delivered to the I/O DLL in whatever segments are convenient for the client.
            The spssSetDEWFirst function is called to deliver the first such segment, and
            subsequent segments are delivered by calling spssSetDEWNext as many times as
            necessary.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetIdStringDelegate">
            <summary>
            Sets the file label of a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="id">
            File label. The length of the string should not exceed 64 characters
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN64"/>
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>.
            </returns>
            <remarks>
            This function sets the file label of the output SPSS data file associated with handle to
            the given string id.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetMultRespDefsDelegate">
            <summary>
            Sets multiple response definitions to a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="mrespDefs">
            ascii string containing definitions.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_MULTRESP"/>
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            this function is used to write multiple response definitions to the file. the definitions
            consist of a single null-terminated ascii string which is similar to that containing the
            variable set definitions.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetTextInfoDelegate">
            <summary>
            Sets the text data from the null-terminated string in textInfo.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="textInfo">
            Text data
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the text data from the null-terminated string in textInfo. If the string is
            longer than 255 characters, only the first 255 are (quietly) used. If textInfo contains the
            empty string, existing text data, if any, is deleted.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetValueCharDelegate">
            <summary>
            Sets the value of a string variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varHandle">
            Handle to the variable
            </param>
            <param name="value">
            Value of the variable as a null-terminated string. The length of the
            string (ignoring trailing blanks, if any) should be less than or equal
            to the length of the variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>.
            </returns>
            <remarks>
            This function sets the value of a string variable for the current case. The current case is
            not written out to the data file until <see cref="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate"/> is called.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetValueNumericDelegate">
            <summary>
            Sets the value of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varHandle">
            Handle to the variable
            </param>
            <param name="value">
            Value of the variable
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function sets the value of a numeric variable for the current case. The current case
            is not written out to the data file until <see cref="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate"/> is called.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarAlignmentDelegate">
            <summary>
            Sets the alignment of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="alignment">
            Alignment. Must be one of <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_LEFT"/>,
            <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_RIGHT"/>, or 
            <see cref="F:Spss.AlignmentCode.SPSS_ALIGN_CENTER"/>. If not a legal
            value, alignment is set to a type-appropriate default
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function sets the value of the alignment attribute of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarCMissingValuesDelegate">
            <summary>
            Sets missing values for a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="missingFormat">
            The number of missing values (0-3) actually supplied.
            </param>
            <param name="missingVal1">
            First missing value
            </param>
            <param name="missingVal2">
            Second missing value
            </param>
            <param name="missingVal3">
            Third missing value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MISSFOR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets missing values for a short string variable. The argument
            missingFormat must be set to a value in the range 0–3 to indicate the number of missing
            values supplied. When fewer than three missing values are to be defined, the redundant
            arguments must still be present, although their values are not inspected. For example,
            if missingFormat is 2, missingVal3 is unused. The supplied missing values must be nullterminated
            and not longer than the length of the variable unless the excess length is
            made up of blanks, which are ignored. If the missing value is shorter than the length of
            the variable, trailing blanks are assumed.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarColumnWidthDelegate">
            <summary>
            Sets the column width of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="columnWidth">
            Column width. If negative, a value of zero is (quietly) used instead
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function sets the value of the column width attribute of a variable. A value of zero
            is special and means that the SPSS Data Editor, which is the primary user of this
            attribute, is to set an appropriate width using its own algorithm.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarCValueLabelDelegate">
            <summary>
            Changes or adds a value label for a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="value">
            Value to be labeled
            </param>
            <param name="label">
            Label
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN60"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS"/>.
            </returns>
            <remarks>
            This function changes or adds a value label for the specified value of a short string
            variable. The label should be a null-terminated string not exceeding 60 characters in
            length.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVariableSetsDelegate">
            <summary>
            Sets the variable sets information in a data file.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varSets">
            Variable sets information
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_VARSETS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the variable sets information in the data file. The information must
            be provided in the form of a null-terminated string. No validity checks are performed
            on the supplied string beyond ensuring that its length is not 0. Any existing variable
            sets information is discarded.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarLabelDelegate">
            <summary>
            Sets the label of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="varLabel">
            Variable label. The length of the string should not exceed 120 characters.
            If varLabel is the empty string, the existing label, if any, is
            deleted.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN120"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the label of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarMeasureLevelDelegate">
            <summary>
            Sets the measurement level of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="measureLevel">
            Measurement level. Must be one of <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_NOM"/>,
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_ORD"/>, 
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_RAT"/>, or 
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_UNK"/> for
            nominal, ordinal, scale (ratio), and unknown, respectively. If
            <see cref="F:Spss.MeasurementLevelCode.SPSS_MLVL_UNK"/>, 
            measurement level is set to a type-appropriate default.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MEASURELEVEL"/>.
            </returns>
            <remarks>
            This function sets the value of the measurement level attribute of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarNameDelegate">
            <summary>
            Creates a new variable with a given name.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="varType">
            Type and size of the variable
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>Error code</term>
            <description>Description</description>
            </listheader>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_OK"/></term>
            	<description>No error</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/></term>
            	<description>The file handle is not valid</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/></term>
            	<description>File is open for reading, not writing</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/></term>
            	<description>Dictionary has already been written with <see cref="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate"/></description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_VARTYPE"/></term>
            	<description>Invalid length code ( varLength is negative or exceeds 255)</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/></term>
            	<description>Variable name is invalid</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_DUP_VAR"/></term>
            	<description>There is already a variable with the same name</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/></term>
            	<description>Insufficient memory</description>
            </item>
            </list>
            </returns>
            <remarks>
            This function creates a new variable named varName, which will be either numeric or
            string based on varLength. If the latter is zero, a numeric variable with a default format
            of F8.2 will be created; if it is greater than 0 and less than or equal to 255, a string variable
            with length varLength will be created; any other value will be rejected as invalid.
            For better readability, macros SPSS_NUMERIC and SPSS_STRING( length) may be
            used as values for varLength.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarNMissingValuesDelegate">
            <summary>
            Sets the missing values for a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="missingFormat">
            Missing values format code
            </param>
            <param name="missingVal1">
            First missing value
            </param>
            <param name="missingVal2">
            Second missing value
            </param>
            <param name="missingVal3">
            Third missing value
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MISSFOR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets missing values for a numeric variable. The interpretation of the
            arguments missingVal1, missingVal2, and missingVal3 depends on the value of
            missingFormat. If missingFormat is set to SPSS_MISS_RANGE, missingVal1 and
            missingVal2 are taken as the upper and lower limits, respectively, of the range, and
            missingVal3 is ignored. If missingFormat is SPSS_MISS_RANGEANDVAL, missingval1
            and missingVal2 are taken as limits of the range and missingVal3 is taken as the discrete
            missing value. If missingFormat is neither of the above, it must be in the range 0–3,
            indicating the number of discrete missing values present. For example, if
            missingFormat is 2, missingVal1 and missingVal2 are taken as two discrete missing
            values and missingVal3 is ignored. (The macros SPSS_NO_MISSVAL,
            SPSS_ONE_MISSVAL, SPSS_TWO_MISSVAL, and SPSS_THREE_MISSVAL may be
            used as synonyms for 0–3.)
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarNValueLabelDelegate">
            <summary>
            Changes or adds a value label to a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="value">
            Value to be labeled
            </param>
            <param name="label">
            Label
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN60"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS"/>.
            </returns>
            <remarks>
            This function changes or adds a value label for the specified value of a numeric
            variable. The label should be a null-terminated string not exceeding 60 characters in
            length.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarPrintFormatDelegate">
            <summary>
            Sets the print format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="printType">
            Print format type code (file spssdio.h defines macros of the form
            <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all 
            valid format type codes)
            </param>
            <param name="printDec">
            Number of digits after the decimal
            </param>
            <param name="printWidth">
            Print format width
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_PRFOR"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the print format of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSetVarWriteFormatDelegate">
            <summary>
            Sets the write format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="writeType">
            Write format type code (file spssdio.h defines macros of the form
            <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes)
            </param>
            <param name="writeDec">
            Number of digits after the decimal
            </param>
            <param name="writeWidth">
            Write format width
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_WRFOR"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the write format of a variable.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssSysmisValDelegate">
            <summary>
            Gets the system missing value.
            </summary>
            <returns>
            The SPSS system-missing value for the host system.
            </returns>
            <remarks>
            This function returns the SPSS system-missing value for the host system. It may be
            called at any time.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssWholeCaseInDelegate">
            <summary>
            Reads in the raw data for an entire case.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseRec">
            Buffer to contain the case
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_END"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>.
            </returns>
            <remarks>
            This function reads a case from a data file into a case buffer provided by the user. The
            required size of the buffer may be obtained by calling <see cref="T:Spss.SpssThinWrapper.spssGetCaseSizeDelegate"/>. This is a fairly
            low-level function whose use should not be mixed with calls to <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>
            using the same file handle because both procedures read a new case from the data file.
            </remarks>
        </member>
        <member name="T:Spss.SpssThinWrapper.spssWholeCaseOutDelegate">
            <summary>
            Writes out raw data as a case.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="caseRec">
            Case record to be written to the data file
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>.
            </returns>
            <remarks>
            This function writes a case assembled by the caller to a data file. The case is assumed
            to have been constructed correctly in the buffer caseRec, and its validity is not
            checked. This is a fairly low-level function whose use should not be mixed with calls
            to <see cref="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate"/> using the same file handle because both procedures write a
            new case to the data file.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssSafeWrapper"/> class.
            </summary>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssOpenRead(System.String,System.Int32@)">
            <summary>
            Opens an SPSS file for reading.
            </summary>
            <param name="fileName">
            Name of the file.
            </param>
            <param name="handle">
            The handle to the opened file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>.
            </returns>
            <remarks>
            This function opens an SPSS data file for reading and returns a handle that should be
            used for subsequent operations on the file.
            Files opened with spssOpenRead should be closed with <see cref="T:Spss.SpssThinWrapper.spssCloseReadDelegate"/>.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssOpenWrite(System.String,System.Int32@)">
            <summary>
            Creates an empty SPSS file.
            </summary>
            <param name="fileName">
            Name of the file.
            </param>
            <param name="handle">
            The handle to the new file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            </returns>
            <remarks>
            This function opens a file in preparation for creating a new SPSS data file and returns a
            handle that should be used for subsequent operations on the file.
            Files opened with spssOpenWrite should be closed with <see cref="T:Spss.SpssThinWrapper.spssCloseWriteDelegate"/>.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetCaseWeightVar(System.Int32,System.String@)">
            <summary>
            Reports the name of the case weight variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            The name of the case weight variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_CASEWGT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_CASEWGT"/>.
            </returns>
            <remarks>
            This function reports the name of the case weight variable. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetDEWFirst(System.Int32,System.String@,System.Int32)">
            <summary>
            Retrieves the first block of SPSS Data Entry information from a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="data">
            Data from the file.
            </param>
            <param name="maxData">
            Maximum bytes to return.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_DEW"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The client can retrieve DEW information (file information that is private to the SPSS
            Data Entry product) from a file in whatever increments are convenient. The first such
            increment is retrieved by calling spssGetDEWFirst, and subsequent segments are
            retrieved by calling spssGetDEWNext as many times as necessary. As with
            spssGetDEWInfo, spssGetDEWFirst will return SPSS_NO_DEW if the file was written
            with a byte order that is the reverse of that of the host.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetDEWGUID(System.Int32,System.String@)">
            <summary>
            Gets the Data Entry GUID from a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="asciiGUID">
            The file's GUID in character form or a null string if the
            file contains no GUID.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            Data Entry for Windows maintains a GUID in character form as a uniqueness indicator.
            Two files have identical dictionaries and DEW information if they have the same
            GUID. Note that the spssOpenWriteCopy function will not copy the source file’s
            GUID. spssGetDEWGUID allows the client to read a file’s GUID, if any. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetDEWNext(System.Int32,System.String@,System.Int32)">
            <summary>
            Retrieves the next block of SPSS Data Entry information from a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="data">
            Data from the file.
            </param>
            <param name="maxData">
            Maximum bytes to return.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DEW_NOFIRST"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The client can retrieve DEW information (file information that is private to the SPSS
            Data Entry product) from a file in whatever increments are convenient. The first such
            increment is retrieved by calling <see cref="M:Spss.SpssSafeWrapper.spssGetDEWFirst(System.Int32,System.String@,System.Int32)"/>, and subsequent segments are
            retrieved by calling spssGetDEWNext as many times as necessary. As with
            <see cref="T:Spss.SpssThinWrapper.spssGetDEWInfoDelegate"/>, <see cref="M:Spss.SpssSafeWrapper.spssGetDEWFirst(System.Int32,System.String@,System.Int32)"/> will return SPSS_NO_DEW if the file was written
            with a byte order that is the reverse of that of the host.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetIdString(System.Int32,System.String@)">
            <summary>
            Gets the file label of a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="id">
            File label.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function retrieves the file label of the SPSS data file associated with 
            <paramref>handle</paramref> into the <paramref>id</paramref> parameter.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetReleaseInfo(System.Int32,System.Int32[]@)">
            <summary>
            Gets information on the running version of SPSS, and the hosting computer.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="relInfo">
            Array of <see cref="T:System.Int32"/> in which release- and machine-specific data will be
            stored.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE73"/>.
            </returns>
            <remarks>
            This function reports release- and machine-specific information about the file
            associated with handle. The information consists of an array of eight int values copied
            from record type 7, subtype 3 of the file, and is useful primarily for debugging. The
            array elements are, in order, release number (index 0), release subnumber (1), special
            release identifier number (2), machine code (3), floating-point representation code (4),
            compression scheme code (5), big/little-endian code (6), and character representation
            code (7).
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetSystemString(System.Int32,System.String@)">
            <summary>
            Gets the name of the system that created a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="sysName">
            The originating system name.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function returns the name of the system under which the file was created.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetTextInfo(System.Int32,System.String@)">
            <summary>
            Gets the data created by TextSmart.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="textInfo">
            Text data.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function retrieves the text data created by TextSmart.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetTimeStamp(System.Int32,System.String@,System.String@)">
            <summary>
            Gets the creation date of a data file, as recorded in the file itself.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="fileDate">
            File creation date.
            </param>
            <param name="fileTime">
            File creation time.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/> or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>.
            </returns>
            <remarks>
            This function returns the creation date of the file as recorded in the file itself. The creation
            date is a 9-byte string in dd mmm yy format (27 Feb 96). The creation time is a 
            8-byte oypcbi in hh:mm:ss format (13:12:15).
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetValueChar(System.Int32,System.Double,System.String@)">
            <summary>
            Gets the string value of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varHandle">
            Handle of the variable.
            </param>
            <param name="value">
            Value of the string variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_CASE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_BUFFER_SHORT"/>.
            </returns>
            <remarks>
            This function gets the value of a string variable for the current case, which is the case
            read by the most recent call to <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarAlignment(System.Int32,System.String,Spss.AlignmentCode@)">
            <summary>
            Gets the alignment of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="alignment">
            Alignment of the variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the alignment attribute of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarCMissingValues(System.Int32,System.String,Spss.MissingValueFormatCode@,System.String@,System.String@,System.String@)">
            <summary>
            Gets the missing values of a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="missingFormat">
            Missing value format code.
            </param>
            <param name="missingVal1">
            First missing value.
            </param>
            <param name="missingVal2">
            Second missing value.
            </param>
            <param name="missingVal3">
            Third missing value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>.
            </returns>
            <remarks>
            This function reports the missing values of a short string variable. The value of
            <paramref>missingFormat</paramref> will indicate 
            the number of missing values. The
            appropriate number of missing values is copied to the <paramref>missingVal1</paramref>,
            <paramref>missingVal2</paramref>, and <paramref>missingVal3</paramref> parameters. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarColumnWidth(System.Int32,System.String,System.Int32@)">
            <summary>
            Gets the width of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="columnWidth">
            Column width.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the column width attribute of a variable. A value of
            zero is special and means that the SPSS Data Editor, which is the primary user of this
            attribute, will set an appropriate width using its own algorithm.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarInfo(System.Int32,System.Int32,System.String@,System.Int32@)">
            <summary>
            Gets the name and type of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="iVar">
            Zero origin variable number.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="varType">
            Variable type.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function gets the name and type of one of the variables present in a data file. It
            serves the same purpose as <see cref="M:Spss.SpssSafeWrapper.spssGetVarNames(System.Int32,System.String[]@,System.Int32[]@)"/> but returns the information one variable
            at a time and, therefore, can be passed to a Visual Basic program. 
            The type code is an integer in the range 0–255, 0 indicating a numeric
            variable and a positive value indicating a string variable of that size.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarHandle(System.Int32,System.String,System.Double@)">
            <summary>
            Gets the handle for a named variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="varHandle">
            Handle for the variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function returns a handle for a variable, which can then be used to read or write
            (depending on how the file was opened) values of the variable. If handle is associated
            with an output file, the dictionary must be written with <see cref="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate"/> 
            before variable handles can be obtained via spssGetVarHandle.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarLabel(System.Int32,System.String,System.String@)">
            <summary>
            Gets the variable label for some named variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="varLabel">
            Variable label.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function copies the label of variable <paramref>varName</paramref> into 
            <paramref>varLabel</paramref>.  To get labels more than 120 characters long, use
            the spssGetVarLabelLong function.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarMeasureLevel(System.Int32,System.String,Spss.MeasurementLevelCode@)">
            <summary>
            Gets the measurement level of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="measureLevel">
            Measurement level.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the value of the measurement level attribute of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarNMissingValues(System.Int32,System.String,Spss.MissingValueFormatCode@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the missing values of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="missingFormat">
            Missing value format code.
            </param>
            <param name="missingVal1">
            First missing value.
            </param>
            <param name="missingVal2">
            Second missing value.
            </param>
            <param name="missingVal3">
            Third missing value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function reports the missing values of a numeric variable. The value of
            <paramref>missingFormat</paramref> determines the interpretation of 
            <paramref>missingVal1</paramref>, <paramref>missingVal2</paramref>, and
            <paramref>missingVal3</paramref>. If missingFormat is SPSS_MISS_RANGE, 
            <paramref>missingVal1</paramref> and <paramref>missingVal2</paramref>
            represent the upper and lower limits, respectively, of the range, and 
            <paramref>missingVal3</paramref> is not used. If missingFormat is 
            SPSS_MISS_RANGEANDVAL, <paramref>missingVal1</paramref> and 
            <paramref>missingVal2</paramref> represent the range and 
            <paramref>missingVal3</paramref> is the discrete missing value. 
            If missingFormat is neither of the above, it will be in the range 
            0–3, indicating the number of discrete missing
            values present. (The macros SPSS_NO_MISSVAL, SPSS_ONE_MISSVAL,
            SPSS_TWO_MISSVAL, and SPSS_THREE_MISSVAL may be used as synonyms for 0–3.)
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarCValueLabel(System.Int32,System.String,System.String,System.String@)">
            <summary>
            Gets the value label for a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="value">
            Short string value for which the label is wanted.
            </param>
            <param name="label">
            Label for the value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>.
            </returns>
            <remarks>
            This function gets the value label for a given value of a short string variable. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarNValueLabel(System.Int32,System.String,System.Double,System.String@)">
            <summary>
            Gets the value label for a given value of a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="value">
            Numeric value for which the label is wanted.
            </param>
            <param name="label">
            Label for the value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABEL"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>.
            </returns>
            <remarks>
            This function gets the value label for a given value of a numeric variable. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarPrintFormat(System.Int32,System.String,Spss.FormatTypeCode@,System.Int32@,System.Int32@)">
            <summary>
            Gets print formatting information for a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="printType">
            Print format type code (file spssdio.h defines macros of
            the form <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes)
            </param>
            <param name="printDec">
            Number of digits after the decimal.
            </param>
            <param name="printWidth">
            Print format width.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the print format of a variable. Format type, number of decimal
            places, and field width are returned as <paramref>printType</paramref>, 
            <paramref>printDec</paramref>, and <paramref>printWid</paramref>, respectively.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarWriteFormat(System.Int32,System.String,Spss.FormatTypeCode@,System.Int32@,System.Int32@)">
            <summary>
            Gets the write format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varName">
            Variable name
            </param>
            <param name="writeType">
            Pointer to write format type code (file spssdio.h defines macros of
            the form <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes)
            </param>
            <param name="writeDec">
            Pointer to number of digits after the decimal
            </param>
            <param name="writeWidth">
            Pointer to write format width
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function reports the write format of a variable. Format type, number of decimal
            places, and field width are returned as writeType, writeDec, and writeWid,
            respectively.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssOpenAppend(System.String,System.Int32@)">
            <summary>
            Opens an SPSS file for appending cases.
            </summary>
            <param name="fileName">
            Name of the file.
            </param>
            <param name="handle">
            Handle to the opened file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INCOMPAT_APPEND"/>.
            </returns>
            <remarks>
            This function opens an SPSS data file for appending cases and returns a handle that
            should be used for subsequent operations on the file.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssOpenWriteCopy(System.String,System.String,System.Int32@)">
            <summary>
            Creates a new SPSS data file, with a dictionary copied from an existing file.
            </summary>
            <param name="fileName">
            Name of the new file.
            </param>
            <param name="dictFileName">
            Name of existing file.
            </param>
            <param name="handle">
            Handle of the new file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FITAB_FULL"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_OERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE2"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_TYPE999"/>.
            </returns>
            <remarks>
            This function opens a file in preparation for creating a new SPSS data file and initializes
            its dictionary from that of an existing SPSS data file. It is useful when you want to modify
            the dictionary or data of an existing file or replace all of its data. The typical sequence
            of operations is to call <see cref="M:Spss.SpssSafeWrapper.spssOpenWriteCopy(System.String,System.String,System.Int32@)"/> (newFileName, oldFileName, ...) to open a
            new file initialized with a copy of the old file’s dictionary, then <see cref="M:Spss.SpssSafeWrapper.spssOpenRead(System.String,System.Int32@)"/> (oldFile-
            Name, ...) to open the old file to access its data.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetCaseWeightVar(System.Int32,System.String)">
            <summary>
            Sets the case weight variable in a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            The name of the case weight variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function defines variable varName as the case weight variable for the data file
            specified by the handle.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetDateVariables(System.Int32,System.Int32[])">
            <summary>
            Sets the Trends date variable information.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="dateInfo">
            Array containing date variables information.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_DATEINFO"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the Trends date variable information. The array at dateInfo is
            assumed to have numofElements elements that correspond to the data array portion of
            record 7, subtype 3. Its first six elements comprise the “fixed” information, followed
            by a sequence of one or more three-element groups. Since very little validity checking
            is done on the input array, this function should be used with caution and is
            recommended only for copying Trends information from one file to another.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetDEWFirst(System.Int32,System.String)">
            <summary>
            Sets the first block of Data Entry information.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="data">
            Data to be written.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_DEW"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            DEW information (file information which is private to the SPSS Data Entry product)
            can be delivered to the I/O DLL in whatever segments are convenient for the client.
            The spssSetDEWFirst function is called to deliver the first such segment, and
            subsequent segments are delivered by calling spssSetDEWNext as many times as
            necessary.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetDEWGUID(System.Int32,System.String)">
            <summary>
            Sets the unique Data Entry uniqueness GUID.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="asciiGUID">
            The GUID to be stored on the file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function stores the Data Entry for Windows uniqueness indicator on the data file.
            It should only be used by the DEW product.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetDEWNext(System.Int32,System.String)">
            <summary>
            Sets the next block of information for Data Entry.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="data">
            Data to be written.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DEW_NOFIRST"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_BADTEMP"/>.
            </returns>
            <remarks>
            The DEW information (file information that is private to the SPSS Data Entry product)
            can be delivered to the I/O DLL in whatever segments are convenient for the client.
            The spssSetDEWFirst function is called to deliver the first such segment, and
            subsequent segments are delivered by calling spssSetDEWNext as many times as
            necessary.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetIdString(System.Int32,System.String)">
            <summary>
            Sets the file label of a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="id">
            File label. The length of the string should not exceed 
            <see cref="F:Spss.SpssThinWrapper.SPSS_MAX_IDSTRING"/> characters.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN64"/>
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>.
            </returns>
            <remarks>
            This function sets the file label of the output SPSS data file associated with handle to
            the given string id.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetMultRespDefs(System.Int32,System.String)">
            <summary>
            Sets multiple response definitions to a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="mrespDefs">
            ASCII string containing definitions.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_MULTRESP"/>
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function is used to write multiple response definitions to the file. The definitions
            consist of a single null-terminated ASCII string which is similar to that containing the
            variable set definitions.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetTextInfo(System.Int32,System.String)">
            <summary>
            Sets the text data from the string in textInfo.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="textInfo">
            Text data
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the text data from the null-terminated string in textInfo. If the string is
            longer than 255 characters, only the first 255 are (quietly) used. If textInfo contains the
            empty string, existing text data, if any, is deleted.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetValueChar(System.Int32,System.Double,System.String)">
            <summary>
            Sets the value of a string variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varHandle">
            Handle to the variable.
            </param>
            <param name="value">
            Value of the variable. The length of the
            string (ignoring trailing blanks, if any) should be less than or equal
            to the length of the variable.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>.
            </returns>
            <remarks>
            This function sets the value of a string variable for the current case. The current case is
            not written out to the data file until <see cref="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate"/> is called.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarAlignment(System.Int32,System.String,Spss.AlignmentCode)">
            <summary>
            Sets the alignment of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="alignment">
            Alignment.  If not a legal
            value, alignment is set to a type-appropriate default.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function sets the value of the alignment attribute of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarCMissingValues(System.Int32,System.String,Spss.MissingValueFormatCode,System.String,System.String,System.String)">
            <summary>
            Sets missing values for a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="missingFormat">
            The number of missing values (0-3) actually supplied.
            </param>
            <param name="missingVal1">
            First missing value.
            </param>
            <param name="missingVal2">
            Second missing value.
            </param>
            <param name="missingVal3">
            Third missing value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MISSFOR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets missing values for a short string variable. The argument
            missingFormat must be set to a value in the range 0–3 to indicate the number of missing
            values supplied. When fewer than three missing values are to be defined, the redundant
            arguments must still be present, although their values are not inspected. For example,
            if missingFormat is 2, missingVal3 is unused. The supplied missing values must be nullterminated
            and not longer than the length of the variable unless the excess length is
            made up of blanks, which are ignored. If the missing value is shorter than the length of
            the variable, trailing blanks are assumed.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarColumnWidth(System.Int32,System.String,System.Int32)">
            <summary>
            Sets the column width of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="columnWidth">
            Column width. If negative, a value of zero is (quietly) used instead.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>.
            </returns>
            <remarks>
            This function sets the value of the column width attribute of a variable. A value of zero
            is special and means that the SPSS Data Editor, which is the primary user of this
            attribute, is to set an appropriate width using its own algorithm.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarLabel(System.Int32,System.String,System.String)">
            <summary>
            Sets the label of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="varLabel">
            Variable label. The length of the string should not exceed 
            <see cref="F:Spss.SpssThinWrapper.SPSS_MAX_VARLABEL"/> characters.
            If varLabel is the empty string, the existing label, if any, is deleted.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN120"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the label of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarName(System.Int32,System.String,System.Int32)">
            <summary>
            Creates a new variable with a given name.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="varType">
            Type and size of the variable.
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>Error code</term>
            <description>Description</description>
            </listheader>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_OK"/></term>
            	<description>No error</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/></term>
            	<description>The file handle is not valid</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/></term>
            	<description>File is open for reading, not writing</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/></term>
            	<description>Dictionary has already been written with <see cref="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate"/></description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_VARTYPE"/></term>
            	<description>Invalid length code ( varLength is negative or exceeds 255)</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/></term>
            	<description>Variable name is invalid</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_DUP_VAR"/></term>
            	<description>There is already a variable with the same name</description>
            </item>
            <item>
            	<term><see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/></term>
            	<description>Insufficient memory</description>
            </item>
            </list>
            </returns>
            <remarks>
            This function creates a new variable named varName, which will be either numeric or
            string based on varLength. If the latter is zero, a numeric variable with a default format
            of F8.2 will be created; if it is greater than 0 and less than or equal to 255, a string variable
            with length varLength will be created; any other value will be rejected as invalid.
            For better readability, macros SPSS_NUMERIC and SPSS_STRING( length) may be
            used as values for varLength.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarCValueLabel(System.Int32,System.String,System.String,System.String)">
            <summary>
            Changes or adds a value label for a short string variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="value">
            Value to be labeled.
            </param>
            <param name="label">
            Label.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN60"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_STRVALUE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS"/>.
            </returns>
            <remarks>
            This function changes or adds a value label for the specified value of a short string
            variable. The label should not exceed 60 characters in length.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVariableSets(System.Int32,System.String)">
            <summary>
            Sets the variable sets information in a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varSets">
            Variable sets information.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EMPTY_VARSETS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the variable sets information in the data file. The information must
            be provided in the form of a string. No validity checks are performed
            on the supplied string beyond ensuring that its length is not 0. Any existing variable
            sets information is discarded.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarMeasureLevel(System.Int32,System.String,Spss.MeasurementLevelCode)">
            <summary>
            Sets the measurement level of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="measureLevel">
            Measurement level.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MEASURELEVEL"/>.
            </returns>
            <remarks>
            This function sets the value of the measurement level attribute of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarNMissingValues(System.Int32,System.String,Spss.MissingValueFormatCode,System.Double,System.Double,System.Double)">
            <summary>
            Sets the missing values for a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="missingFormat">
            Missing values format code.
            </param>
            <param name="missingVal1">
            First missing value.
            </param>
            <param name="missingVal2">
            Second missing value.
            </param>
            <param name="missingVal3">
            Third missing value.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_MISSFOR"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets missing values for a numeric variable. The interpretation of the
            arguments missingVal1, missingVal2, and missingVal3 depends on the value of
            missingFormat. If missingFormat is set to SPSS_MISS_RANGE, missingVal1 and
            missingVal2 are taken as the upper and lower limits, respectively, of the range, and
            missingVal3 is ignored. If missingFormat is SPSS_MISS_RANGEANDVAL, missingval1
            and missingVal2 are taken as limits of the range and missingVal3 is taken as the discrete
            missing value. If missingFormat is neither of the above, it must be in the range 0–3,
            indicating the number of discrete missing values present. For example, if
            missingFormat is 2, missingVal1 and missingVal2 are taken as two discrete missing
            values and missingVal3 is ignored. (The macros SPSS_NO_MISSVAL,
            SPSS_ONE_MISSVAL, SPSS_TWO_MISSVAL, and SPSS_THREE_MISSVAL may be
            used as synonyms for 0–3.)
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarNValueLabel(System.Int32,System.String,System.Double,System.String)">
            <summary>
            Changes or adds a value label to a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="value">
            Value to be labeled.
            </param>
            <param name="label">
            Label.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_EXC_LEN60"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS"/>.
            </returns>
            <remarks>
            This function changes or adds a value label for the specified value of a numeric
            variable. The label should not exceed 60 characters in length.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarPrintFormat(System.Int32,System.String,Spss.FormatTypeCode,System.Int32,System.Int32)">
            <summary>
            Sets the print format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="printType">
            Print format type code (file spssdio.h defines macros of the form
            <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all 
            valid format type codes).
            </param>
            <param name="printDec">
            Number of digits after the decimal.
            </param>
            <param name="printWidth">
            Print format width.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_PRFOR"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the print format of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssSetVarWriteFormat(System.Int32,System.String,Spss.FormatTypeCode,System.Int32,System.Int32)">
            <summary>
            Sets the write format of a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="writeType">
            Write format type code (file spssdio.h defines macros of the form
            <see cref="T:Spss.FormatTypeCode">SPSS_FMT_...</see> for all valid format type codes).
            </param>
            <param name="writeDec">
            Number of digits after the decimal.
            </param>
            <param name="writeWidth">
            Write format width.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_COMMIT"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_WRFOR"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function sets the write format of a variable.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssWholeCaseIn(System.Int32,System.String@)">
            <summary>
            Reads in the raw data for an entire case.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="caseRec">
            Buffer to contain the case.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_FILE_END"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_WRMODE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_RERROR"/>.
            </returns>
            <remarks>
            This function reads a case from a data file into a case buffer provided by the user. The
            required size of the buffer may be obtained by calling <see cref="T:Spss.SpssThinWrapper.spssGetCaseSizeDelegate"/>. This is a fairly
            low-level function whose use should not be mixed with calls to <see cref="T:Spss.SpssThinWrapper.spssReadCaseRecordDelegate"/>
            using the same file handle because both procedures read a new case from the data file.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssWholeCaseOut(System.Int32,System.String)">
            <summary>
            Writes out raw data as a case.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="caseRec">
            Case record to be written to the data file.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_OPEN_RDMODE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_FILE_WERROR"/>.
            </returns>
            <remarks>
            This function writes a case assembled by the caller to a data file. The case is assumed
            to have been constructed correctly in the buffer caseRec, and its validity is not
            checked. This is a fairly low-level function whose use should not be mixed with calls
            to <see cref="T:Spss.SpssThinWrapper.spssCommitCaseRecordDelegate"/> using the same file handle 
            because both procedures write a new case to the data file.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVariableSets(System.Int32,System.String@)">
            <summary>
            Gets variable sets information in a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varSets">
            Variable sets string.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_VARSETS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function reports the variable sets information in the data file. 
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetDateVariables(System.Int32,System.Int32[])">
            <summary>
            Reports TRENDS date variable information.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="dateInfo">
            Pointer to first element of the allocated array.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_DATEINFO"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function reports the TRENDS date variable information, if any, in an SPSS data file.
            It places the information in a dynamically allocated long array, sets *numofElements to
            the number of elements in the array, and sets *dateInfo to point to the array. The caller is
            expected to free the array by calling <see cref="T:Spss.SpssThinWrapper.spssFreeDateVariablesDelegate"/> when it is no longer needed.
            The variable information is copied directly from record 7, subtype 3. Its first six elements
            comprise the "fixed" information, followed by a sequence of one or more three-element
            groups.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetMultRespDefs(System.Int32,System.String@)">
            <summary>
            Retrieves the definitions from a data file.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="mrespDefs">
            Returned string.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_MULTRESP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function retrieves the definitions from an SPSS data file. The definitions are stored
            as a null-terminated ASCII string which is very similar to that containing the variable
            set definitions. The memory allocated by this function to contain the string must be freed
            by calling <see cref="T:Spss.SpssThinWrapper.spssFreeMultRespDefsDelegate"/>. If the file contains no multiple response definitions,
            *mrespDefs is set to NULL, and the function returns the warning code
            <see cref="F:Spss.ReturnCode.SPSS_NO_MULTRESP"/>.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarNValueLabels(System.Int32,System.String,System.Double[]@,System.String[]@)">
            <summary>
            Gets a list of all response values and labels for a numeric variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="values">
            Array of values.
            </param>
            <param name="labels">
            Array of labels.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>, 
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NUME_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the set of labeled values and associated labels for a numeric variable.
            The number of values is returned as *numLabels. Values are stored into an array of
            *numLabels double elements, and *values is set to point to the first element of the array.
            The corresponding labels are structured as an array of *numLabels pointers, each pointing
            to a char string containing a null-terminated label, and *labels is set to point to the
            first element of the array.
            The two arrays and the label strings are allocated on the heap. When they are no longer
            needed, <see cref="T:Spss.SpssThinWrapper.spssFreeVarNValueLabelsDelegate"/> should be called to free the memory.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarCValueLabels(System.Int32,System.String,System.String[]@,System.String[]@)">
            <summary>
            Gets the list of response values and labels for a variable.
            </summary>
            <param name="handle">
            Handle to the data file.
            </param>
            <param name="varName">
            Variable name.
            </param>
            <param name="values">
            Array of values.
            </param>
            <param name="labels">
            Array of labels.
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_NO_LABELS"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_VARNAME"/>,
            <see cref="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND"/>,
            <see cref="F:Spss.ReturnCode.SPSS_STR_EXP"/>,
            <see cref="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the set of labeled values and associated labels for a short string variable.
            The number of values is returned as *numLabels. Values are stored into an array
            of *numLabels pointers, each pointing to a char string containing a null-terminated
            value, and *values is set to point to the first element of the array. Each value string is as
            long as the variable. The corresponding labels are structured as an array of *numLabels
            pointers, each pointing to a char string containing a null-terminated label, and *labels is
            set to point to the first element of the array.
            The two arrays and the value and label strings are allocated on the heap. When they
            are no longer needed, <see cref="T:Spss.SpssThinWrapper.spssFreeVarCValueLabelsDelegate"/> should be called to free the memory.
            </remarks>
        </member>
        <member name="M:Spss.SpssSafeWrapper.spssGetVarNames(System.Int32,System.String[]@,System.Int32[]@)">
            <summary>
            Reports on all the variables in a data file, including names and types.
            </summary>
            <param name="handle">
            Handle to the data file
            </param>
            <param name="varNames">
            The array to fill with variable names
            </param>
            <param name="varTypes">
            The array to fill with variable types
            </param>
            <returns>
            <see cref="F:Spss.ReturnCode.SPSS_OK"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_HANDLE"/>,
            <see cref="F:Spss.ReturnCode.SPSS_INVALID_FILE"/>, or
            <see cref="F:Spss.ReturnCode.SPSS_NO_MEMORY"/>.
            </returns>
            <remarks>
            This function gets the names and types of all the variables present in a data file. 
            The type code is an integer in the range 0-255, 0 indicating a numeric
            variable and a positive value indicating a string variable of that size.
            </remarks>
        </member>
        <member name="T:Spss.SpssStringVariable">
            <summary>
            Represents an SPSS data variable that stores character string information.
            </summary>
        </member>
        <member name="M:Spss.SpssStringVariable.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssStringVariable"/> class,
            for use when defining a new variable.
            </summary>
        </member>
        <member name="M:Spss.SpssStringVariable.#ctor(Spss.SpssVariablesCollection,System.String,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssStringVariable"/> class,
            for use in loading variables from an existing SPSS data file.
            </summary>
            <param name="variables">The containing collection.</param>
            <param name="varName">The name of the variable being loaded.</param>
            <param name="length">The length of the string variable.  This is the same as SpssType</param>
        </member>
        <member name="M:Spss.SpssStringVariable.Update">
            <summary>
            Updates the changed attributes of the variable within SPSS.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariable.Length">
            <summary>
            Gets the maximum length a string in this variable can be.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariable.MissingValues">
            <summary>
            Gets or sets the missing values for this variable.
            </summary>
            <value>The missing values.</value>
            <remarks>
            A maximum of three maximum values may be supplied.
            </remarks>
        </member>
        <member name="P:Spss.SpssStringVariable.SpssType">
            <summary>
            Gets the SPSS type for the variable.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariable.Value">
            <summary>
            Gets or sets the data value of this variable within a specific case.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariable.ValueLabels">
            <summary>
            The set of value labels (response values and labels) that are defined.
            </summary>
        </member>
        <member name="T:Spss.SpssStringVariableValueLabelsDictionary">
            <summary>
            A collection of value labels for a <see cref="T:Spss.SpssStringVariable"/>.
            </summary>
        </member>
        <member name="M:Spss.SpssStringVariableValueLabelsDictionary.#ctor(Spss.SpssVariable)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssStringVariableValueLabelsDictionary"/> class.
            </summary>
        </member>
        <member name="M:Spss.SpssStringVariableValueLabelsDictionary.Add(System.String,System.String)">
            <summary>
            Adds a value label.
            </summary>
            <param name="value">
            The response value to associate with the new response label.
            </param>
            <param name="label">
            The new response label.
            </param>
        </member>
        <member name="M:Spss.SpssStringVariableValueLabelsDictionary.Update">
            <summary>
            Updates the SPSS data file with changes made to the collection.
            </summary>
        </member>
        <member name="M:Spss.SpssStringVariableValueLabelsDictionary.LoadFromSpssFile">
            <summary>
            Initializes the value labels dictionary from the SPSS data file.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariableValueLabelsDictionary.Variable">
            <summary>
            The variable hosting this collection.
            </summary>
        </member>
        <member name="P:Spss.SpssStringVariableValueLabelsDictionary.Applies">
            <summary>
            Gets a value indicating whether this string variable can have value labels.
            </summary>
            <remarks>
            SPSS only supports value labels on strings within
            <see cref="F:Spss.SpssThinWrapper.SPSS_MAX_SHORTSTRING"/> characters
            in length..
            </remarks>
        </member>
        <member name="T:Spss.ReturnCode">
            <summary>
            Error/warning codes that calls to SPSS methods can return.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_OK">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FILE_OERROR">
            <summary>
            Error opening file
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FILE_WERROR">
            <summary>
            File write error
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FILE_RERROR">
            <summary>
            Error reading the file
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FITAB_FULL">
            <summary>
            File table full (too many open SPSS data files)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_HANDLE">
            <summary>
            The file handle is not valid
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_FILE">
            <summary>
            Data file contains no variables
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_MEMORY">
            <summary>
            Insufficient memory
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_OPEN_RDMODE">
            <summary>
            File is open for reading, not writing
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_OPEN_WRMODE">
            <summary>
            The file is open for writing, not reading
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_VARNAME">
            <summary>
            The variable name is not valid
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DICT_EMPTY">
            <summary>
            No variables defined in the dictionary
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_VAR_NOTFOUND">
            <summary>
            A variable with the given name does not exist
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DUP_VAR">
            <summary>
            There is already a variable with the same name
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NUME_EXP">
            <summary>
            The variable is not numeric
            OR
            At least one variable in the list is not numeric
            OR
            The specified variable has string values
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_STR_EXP">
            <summary>
            The variable is numeric
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_SHORTSTR_EXP">
            <summary>
            The variable is a long string (length > 8)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_VARTYPE">
            <summary>
            Invalid length code (varLength is negative or
            exceeds 255)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_MISSFOR">
            <summary>
            Invalid missing values specification ( missingFormat
            is invalid or the lower limit of range is greater than the
            upper limit)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_COMPSW">
            <summary>
            Invalid compression switch (other than 0 or 1)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_PRFOR">
            <summary>
            The print format specification is invalid or is
            incompatible with the variable type
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_WRFOR">
            <summary>
            The write format specification is invalid or is
            incompatible with the variable type
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_DATE">
            <summary>
            Invalid date 
            OR
            The date value (spssDate) is negative
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_TIME">
            <summary>
            Invalid time
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_VARIABLES">
            <summary>
            Fewer than two variables in list 
            OR
            Number of variables ( numVars) is zero or negative
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DUP_VALUE">
            <summary>
            The list of values contains duplicates
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_CASEWGT">
            <summary>
            The given case weight variable is invalid. This error
            signals an internal problem in the implementation
            of the DLL and should never occur.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DICT_COMMIT">
            <summary>
            Dictionary has already been written with
            spssCommitHeader
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DICT_NOTCOMMIT">
            <summary>
            Dictionary of the output file has not yet been written
            with <see cref="T:Spss.SpssThinWrapper.spssCommitHeaderDelegate"/>.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_TYPE2">
            <summary>
            File is not a valid SPSS data file (no type 2 record)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_TYPE73">
            <summary>
            There is no type7, subtype3 record present. This
            code should be regarded as a warning even though
            it is positive. Files without this record are valid.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_DATEINFO">
            <summary>
            The date variable information is invalid
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_TYPE999">
            <summary>
            File is not a valid SPSS data file (missing type 999
            record)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_STRVALUE">
            <summary>
            The value is longer than the length of the variable
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_CANNOT_FREE">
            <summary>
            Unable to free because arguments are illegal or
            inconsistent (for example, negative numLabels)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_BUFFER_SHORT">
            <summary>
            Buffer value is too short to hold the value
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_CASE">
            <summary>
            Current case is not valid. This may be because no
            spssReadCaseRecord calls have been made yet or
            because the most recent call failed with error or encountered
            the end of file.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INTERNAL_VLABS">
            <summary>
            Internal data structures of the DLL are invalid. This
            signals an error in the DLL.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INCOMPAT_APPEND">
            <summary>
            File created on an incompatible system.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INTERNAL_D_A">
            <summary>
            Undocumented by SPSS.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FILE_BADTEMP">
            <summary>
            Error accessing the temporary file
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DEW_NOFIRST">
            <summary>
            spssGetDEWFirst was never called
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_MEASURELEVEL">
            <summary>
            measureLevel is not in the legal range, or is
            SPSS_MLVL_RAT and the variable is a string variable.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_7SUBTYPE">
            <summary>
            Parameter subtype not between 1 and
            MAX7SUBTYPE
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_MRSETDEF">
            <summary>
            Existing multiple response set definitions are invalid
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_INVALID_MRSETNAME">
            <summary>
            The multiple response set name is invalid
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_DUP_MRSETNAME">
            <summary>
            The multiple response set name is a duplicate
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_BAD_EXTENSION">
            <summary>
            Undocumented by SPSS.
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_LEN64">
            <summary>
            Label length exceeds 64, truncated and used (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_LEN120">
            <summary>
            Variable label’s length exceeds 120, truncated and
            used (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_VARLABEL">
            <summary>
            ... (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_LEN60">
            <summary>
            Label length exceeds 60, truncated and used (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EXC_VALLABEL">
            <summary>
            ... (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_FILE_END">
            <summary>
            End of the file reached, no more cases (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_VARSETS">
            <summary>
            There is no variable sets information in the file (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EMPTY_VARSETS">
            <summary>
            The variable sets information is empty (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_LABELS">
            <summary>
            The variable has no labels (warning) (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_LABEL">
            <summary>
            There is no label for the given value (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_CASEWGT">
            <summary>
            A case weight variable has not been defined for this file (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_DATEINFO">
            <summary>
            There is no TRENDS date variable information in the file (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_MULTRESP">
            <summary>
            No definitions on the file (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EMPTY_MULTRESP">
            <summary>
            The string contains no definitions (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_NO_DEW">
            <summary>
            File contains no DEW information (warning)
            </summary>
        </member>
        <member name="F:Spss.ReturnCode.SPSS_EMPTY_DEW">
            <summary>
            Zero bytes to be written (warning)
            </summary>
        </member>
        <member name="T:Spss.MissingValueFormatCode">
            <summary>
            Missing Value Type codes
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_NO_MISSVAL">
            <summary>
            Indicates that no discrete missing values will be defined.
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_ONE_MISSVAL">
            <summary>
            Indicates that 1 discrete missing values will be defined.
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_TWO_MISSVAL">
            <summary>
            Indicates that 2 discrete missing values will be defined.
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_THREE_MISSVAL">
            <summary>
            Indicates that 3 discrete missing values will be defined.
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_MISS_RANGE">
            <summary>
            missingVal1 and missingVal2 are taken as the upper and lower limits, 
            respectively, of the range, and missingVal3 is ignored
            </summary>
        </member>
        <member name="F:Spss.MissingValueFormatCode.SPSS_MISS_RANGEANDVAL">
            <summary>
            missingval1 and missingVal2 are taken as limits of the range and missingVal3 is taken
            as the discrete missing value.
            </summary>
        </member>
        <member name="T:Spss.FormatTypeCode">
            <summary>
            Format Type codes
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_A">
            <summary>
            Alphanumeric
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_AHEX">
            <summary>
            Alphanumeric hexadecimal
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_COMMA">
            <summary>
            F Format with commas
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_DOLLAR">
            <summary>
            Commas and floating dollar sign
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_F">
            <summary>
            Default Numeric Format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_IB">
            <summary>
            Int16 binary
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_PIBHEX">
            <summary>
            Positive Int16 binary - hex
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_P">
            <summary>
            Packed decimal
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_PIB">
            <summary>
            Positive Int16 binary unsigned
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_PK">
            <summary>
            Positive Int16 binary unsigned
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_RB">
            <summary>
            Floating poInt32 binary
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_RBHEX">
            <summary>
            Floating poInt32 binary hex
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_Z">
            <summary>
            Zoned decimal
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_N">
            <summary>
            N Format- unsigned with leading 0s
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_E">
            <summary>
            E Format- with explicit power of 10
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_DATE">
            <summary>
            Date format dd-mmm-yyyy
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_TIME">
            <summary>
            Time format hh:mm:ss.s
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_DATE_TIME">
            <summary>
            Date and Time
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_ADATE">
            <summary>
            Date format dd-mmm-yyyy
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_JDATE">
            <summary>
            Julian date - yyyyddd
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_DTIME">
            <summary>
            Date-time dd hh:mm:ss.s
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_WKDAY">
            <summary>
            Day of the week
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_MONTH">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_MOYR">
            <summary>
            mmm yyyy
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_QYR">
            <summary>
            q Q yyyy
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_WKYR">
            <summary>
            ww WK yyyy
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_PCT">
            <summary>
            Percent - F followed by %
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_DOT">
            <summary>
            Like COMMA, switching dot for comma
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_CCA">
            <summary>
            User Programmable currency format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_CCB">
            <summary>
            User Programmable currency format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_CCC">
            <summary>
            User Programmable currency format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_CCD">
            <summary>
            User Programmable currency format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_CCE">
            <summary>
            User Programmable currency format
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_EDATE">
            <summary>
            Date in dd/mm/yyyy style
            </summary>
        </member>
        <member name="F:Spss.FormatTypeCode.SPSS_FMT_SDATE">
            <summary>
            Date in yyyy/mm/dd style
            </summary>
        </member>
        <member name="T:Spss.MeasurementLevelCode">
            <summary>
            Measurement Level codes
            </summary>
        </member>
        <member name="F:Spss.MeasurementLevelCode.SPSS_MLVL_UNK">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Spss.MeasurementLevelCode.SPSS_MLVL_NOM">
            <summary>
            Nominal 
            </summary>
        </member>
        <member name="F:Spss.MeasurementLevelCode.SPSS_MLVL_ORD">
            <summary>
            Ordinal
            </summary>
        </member>
        <member name="F:Spss.MeasurementLevelCode.SPSS_MLVL_RAT">
            <summary>
            Scale (Ratio)
            </summary>
        </member>
        <member name="T:Spss.AlignmentCode">
            <summary>
            Alignment codes
            </summary>
        </member>
        <member name="F:Spss.AlignmentCode.SPSS_ALIGN_LEFT">
            <summary>
            Left aligned
            </summary>
        </member>
        <member name="F:Spss.AlignmentCode.SPSS_ALIGN_RIGHT">
            <summary>
            Right aligned
            </summary>
        </member>
        <member name="F:Spss.AlignmentCode.SPSS_ALIGN_CENTER">
            <summary>
            Centered
            </summary>
        </member>
        <member name="T:Spss.VarNameDiagnostic">
            <summary>
            Diagnostics regarding var names
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_OK">
            <summary>
            Valid standard name
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_SCRATCH">
            <summary>
            Valid scratch var name
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_SYSTEM">
            <summary>
            Valid system var name
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_BADLTH">
            <summary>
            Empty or longer than SPSS_MAX_VARNAME
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_BADCHAR">
            <summary>
            Invalid character or imbedded blank
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_RESERVED">
            <summary>
            Name is a reserved word
            </summary>
        </member>
        <member name="F:Spss.VarNameDiagnostic.SPSS_NAME_BADFIRST">
            <summary>
            Invalid initial character
            </summary>
        </member>
        <member name="T:Spss.Type7Record">
            <summary>
            Definitions of "type 7" records
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_DOCUMENTS">
            <summary>
            Documents (actually type 6
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_VAXDE_DICT">
            <summary>
            VAX Data Entry - dictionary version
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_VAXDE_DATA">
            <summary>
            VAX Data Entry - data
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_SOURCE">
            <summary>
            Source system characteristics
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_HARDCONST">
            <summary>
            Source system floating pt constants
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_VARSETS">
            <summary>
            Variable sets
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_TRENDS">
            <summary>
            Trends date information
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_MULTRESP">
            <summary>
            Multiple response groups
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_DEW_DATA">
            <summary>
            Windows Data Entry data
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_TEXTSMART">
            <summary>
            TextSmart data
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_MSMTLEVEL">
            <summary>
            Msmt level, col width, &amp; alignment
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_DEW_GUID">
            <summary>
            Windows Data Entry GUID
            </summary>
        </member>
        <member name="F:Spss.Type7Record.SPSS_T7_XVARNAMES">
            <summary>
            Extended variable names
            </summary>
        </member>
        <member name="M:Spss.SpssVariableKeyedCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssVariableKeyedCollection"/> class.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableKeyedCollection.GetKeyForItem(Spss.SpssVariable)">
            <summary>
            Gets the key for item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Spss.SpssVariableNameConflictException">
            <summary>
            An exception thrown when a variable has a name that conflicts with 
            the name of another variable in the same <see cref="T:Spss.SpssVariablesCollection"/>.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableNameConflictException.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableNameConflictException"/> class,
            for deserialization.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableNameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableNameConflictException"/> class,
            for deserialization.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableNameConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableNameConflictException"/> class,
            for leaving a custom message.
            </summary>
        </member>
        <member name="M:Spss.SpssVariableNameConflictException.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableNameConflictException"/> class.
            </summary>
            <param name="newVarName">
            The new name of the variable being changed, which caused the conflict.
            </param>
            <param name="oldVarName">
            The original variable name that was acceptable.
            </param>
        </member>
        <member name="M:Spss.SpssVariableNameConflictException.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:Spss.SpssVariableNameConflictException"/> class.
            Thrown when a variable is being added that conflicts with another variable.
            </summary>
            <param name="addedVarName">
            The name of the variable being added, which caused the conflict.
            </param>
        </member>
        <member name="P:Spss.SpssVariableNameConflictException.OldVarName">
            <summary>
            The original variable name that was acceptable, if applicable.
            </summary>
        </member>
        <member name="P:Spss.SpssVariableNameConflictException.NewVarName">
            <summary>
            The new name of the variable being changed, which caused the conflict.
            </summary>
        </member>
        <member name="T:Spss.SpssVariablesCollection">
            <summary>
            Class to manage the metadata of variables in an <see cref="T:Spss.SpssDataDocument">SPSS data document</see>.
            </summary>
        </member>
        <member name="F:Spss.SpssVariablesCollection.variables">
            <summary>
            The list of variables in the file, or that will shortly be committed to the file.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.#ctor(Spss.SpssDataDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Spss.SpssVariablesCollection"/> class.
            </summary>
            <param name="document">The hosting SPSS data document whose variables will be managed by
            this instance.</param>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Contains(Spss.SpssVariable)">
            <summary>
            Gets a value indicating whether a variable has been added to this document.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Contains(System.String)">
            <summary>
            Gets a value indicating whether a variable exists in this document.
            </summary>
            <param name="varName">
            The name of the variable in question.
            </param>
            <returns>
            True if the variable already exists in the document.  False otherwise.
            </returns>
        </member>
        <member name="M:Spss.SpssVariablesCollection.IndexOf(Spss.SpssVariable)">
            <summary>
            Gets the position of a variable.
            </summary>
            <returns>
            The index of the variable, or -1 if not found.
            </returns>
        </member>
        <member name="M:Spss.SpssVariablesCollection.IndexOf(System.String)">
            <summary>
            Gets the position of the variable with a given name.
            </summary>
            <returns>
            The index of the variable, or -1 if not found.
            </returns>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Insert(System.Int32,Spss.SpssVariable)">
            <summary>
            Adds a variable to the document at a specific index.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Add(Spss.SpssVariable)">
            <summary>
            Adds a variable to the document.
            </summary>
            <returns>
            The index of the newly added variable.
            </returns>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Remove(Spss.SpssVariable)">
            <summary>
            Removes a variable from the document.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.CopyTo(Spss.SpssVariablesCollection,System.Int32)">
            <summary>
            Copies the definition of variables from this file to another.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.ImportSchema(System.Data.DataTable,System.Action{Spss.SpssVariable})">
            <summary>
            Defines the variables in the SPSS data file so that they mirror
            those defined in a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="table">
            The DataTable whose list of columns are the ones we want to copy.
            </param>
            <param name="fillInMetadataCallback">
            The callback method to use to retrieve the additional metadata 
            to put into the SPSS data document, that is not included in a DataTable.
            Optional.
            </param>
        </member>
        <member name="M:Spss.SpssVariablesCollection.ImportSchema(System.Data.DataTable)">
            <summary>
            Defines the variables in the SPSS data file so that they mirror
            those defined in a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="table">
            The DataTable whose list of columns are the ones we want to copy.
            </param>
        </member>
        <member name="M:Spss.SpssVariablesCollection.Commit">
            <summary>
            Writes the variables to the dictionary.
            </summary>
        </member>
        <member name="M:Spss.SpssVariablesCollection.GenerateColumnName(System.String)">
            <summary>
            Comes up with a variable name guaranteed to be short enough 
            to fit within the limits of SPSS.
            </summary>
            <param name="colName">
            The initially suggested name for a variable.
            </param>
            <returns>
            The original variable name, if it was within SPSS limits.
            Otherwise, it applies a string shortening algorithm and returns
            the shorter variable name.
            </returns>
            <remarks>
            The shortening algorithm takes the first and last several characters of the 
            variable name and concatenates them together such that the resulting
            string is exactly the allowed length for a variable name.
            The process is not guaranteed to produce a unique variable name.
            </remarks>
        </member>
        <member name="M:Spss.SpssVariablesCollection.ColumnNameUpdated(Spss.SpssVariable,System.String)">
            <summary>
            Called when a <see cref="P:Spss.SpssVariable.Name"/> changes so that the lookup
            table can be updated.
            </summary>
        </member>
        <member name="P:Spss.SpssVariablesCollection.Item(System.String)">
            <summary>
            Gets the variable with a given name.
            </summary>
        </member>
        <member name="P:Spss.SpssVariablesCollection.Document">
            <summary>
            The SPSS data document whose variables are being managed.
            </summary>
        </member>
        <member name="P:Spss.SpssVariablesCollection.FileHandle">
            <summary>
            The file handle of the SPSS data document whose variables are being managed.
            </summary>
        </member>
        <member name="P:Spss.SpssVariablesCollection.Item(System.Int32)">
            <summary>
            Gets the variable at some 0-based index.
            </summary>
        </member>
    </members>
</doc>
